diff -ru src_org/sfloader/fluid_defsfont.c src/sfloader/fluid_defsfont.c
--- src_org/sfloader/fluid_defsfont.c	2012-10-10 12:02:22.858640294 +0200
+++ src/sfloader/fluid_defsfont.c	2012-10-10 12:14:01.461872099 +0200
@@ -207,7 +207,7 @@
   time_t modification_time;
   int num_references;
 
-  short* sampledata;
+  const short* sampledata;
   unsigned int samplesize;
 } fluid_cached_sampledata_t;
 
@@ -231,9 +231,10 @@
 #endif
 }
 
-static int fluid_cached_sampledata_load(char *filename, unsigned int samplepos, unsigned int samplesize, short **sampledata)
+static int fluid_cached_sampledata_load(char *filename, unsigned int samplepos, unsigned int samplesize, const short **sampledata)
 {
   fluid_file fd = NULL;
+  short *loaded_sampledata = NULL;
   fluid_cached_sampledata_t* cached_sampledata = NULL;
   time_t modification_time;
 
@@ -278,12 +279,13 @@
     goto error_exit;
   }
 
-  *sampledata = (short*) FLUID_MALLOC(samplesize);
-  if (*sampledata == NULL) {
+
+  loaded_sampledata = (short*) FLUID_MALLOC(samplesize);
+  if (loaded_sampledata == NULL) {
     FLUID_LOG(FLUID_ERR, "Out of memory");
     goto error_exit;
   }
-  if (FLUID_FREAD(*sampledata, 1, samplesize, fd) < samplesize) {
+  if (FLUID_FREAD(loaded_sampledata, 1, samplesize, fd) < samplesize) {
     FLUID_LOG(FLUID_ERR, "Failed to read sample data");
     goto error_exit;
   }
@@ -303,12 +305,12 @@
     unsigned char hi, lo;
     unsigned int i, j;
     short s;
-    cbuf = (unsigned char*)*sampledata;
+    cbuf = (unsigned char*)loaded_sampledata;
     for (i = 0, j = 0; j < samplesize; i++) {
       lo = cbuf[j++];
       hi = cbuf[j++];
       s = (hi << 8) | lo;
-      (*sampledata)[i] = s;
+      loaded_sampledata[i] = s;
     }
   }
 
@@ -327,23 +329,24 @@
   sprintf(cached_sampledata->filename, "%s", filename);
   cached_sampledata->modification_time = modification_time;
   cached_sampledata->num_references = 1;
-  cached_sampledata->sampledata = *sampledata;
+  cached_sampledata->sampledata = loaded_sampledata;
   cached_sampledata->samplesize = samplesize;
 
   cached_sampledata->next = all_cached_sampledata;
   all_cached_sampledata = cached_sampledata;
 
+
  success_exit:
   fluid_mutex_unlock(cached_sampledata_mutex);
+  *sampledata = loaded_sampledata;
   return FLUID_OK;
 
  error_exit:
   if (fd != NULL) {
     FLUID_FCLOSE(fd);
   }
-  if (*sampledata != NULL) {
-    FLUID_FREE(*sampledata);
-    *sampledata = NULL;
+  if (loaded_sampledata != NULL) {
+    FLUID_FREE(loaded_sampledata);
   }
 
   if (cached_sampledata != NULL) {
@@ -354,6 +357,7 @@
   }
 
   fluid_mutex_unlock(cached_sampledata_mutex);
+  *sampledata = NULL;
   return FLUID_FAILED;
 }
 
@@ -371,7 +375,7 @@
 
       if (cached_sampledata->num_references == 0) {
         fluid_munlock(cached_sampledata->sampledata, cached_sampledata->samplesize);
-        FLUID_FREE(cached_sampledata->sampledata);
+        FLUID_FREE((short*)cached_sampledata->sampledata);
         FLUID_FREE(cached_sampledata->filename);
 
         if (prev != NULL) {
diff -ru src_org/sfloader/fluid_defsfont.h src/sfloader/fluid_defsfont.h
--- src_org/sfloader/fluid_defsfont.h	2012-10-10 10:52:33.910394955 +0200
+++ src/sfloader/fluid_defsfont.h	2012-10-10 12:06:06.125322543 +0200
@@ -402,7 +402,7 @@
   char* filename;           /* the filename of this soundfont */
   unsigned int samplepos;   /* the position in the file at which the sample data starts */
   unsigned int samplesize;  /* the size of the sample data */
-  short* sampledata;        /* the sample data, loaded in ram */
+  const short* sampledata;  /* the sample data, loaded in ram */
   fluid_list_t* sample;      /* the samples in this soundfont */
   fluid_defpreset_t* preset; /* the presets of this soundfont */
 
diff -ru src_org/sfloader/fluid_ramsfont.c src/sfloader/fluid_ramsfont.c
--- src_org/sfloader/fluid_ramsfont.c	2012-08-16 06:01:13.000000000 +0200
+++ src/sfloader/fluid_ramsfont.c	2012-10-10 12:15:31.623297754 +0200
@@ -1143,9 +1143,9 @@
 	unsigned int storedNbFrames;
 
 	/* in case we already have some data */
-  if (sample->data != NULL) {
-  	FLUID_FREE(sample->data);
-  }
+	if (sample->data != NULL) {
+		FLUID_FREE((short*)sample->data);
+	}
 
 	if (copy_data) {
 
@@ -1158,7 +1158,7 @@
 	    FLUID_LOG(FLUID_ERR, "Out of memory");
 	    return FLUID_FAILED;
 	  }
-	  FLUID_MEMSET(sample->data, 0, storedNbFrames*2 + 4*SAMPLE_LOOP_MARGIN);
+	  FLUID_MEMSET((short*)sample->data, 0, storedNbFrames*2 + 4*SAMPLE_LOOP_MARGIN);
 	  FLUID_MEMCPY((char*)(sample->data) + 2*SAMPLE_LOOP_MARGIN, data, nbframes*2);
 
 #if 0
@@ -1222,7 +1222,7 @@
 {
 	/* same as delete_fluid_sample, plus frees the data */
   if (sample->data != NULL) {
-  	FLUID_FREE(sample->data);
+    FLUID_FREE((short*)sample->data);
   }
   sample->data = NULL;
   FLUID_FREE(sample);
diff -ru include_org/fluidsynth/sfont.h include/fluidsynth/sfont.h
--- include_org/fluidsynth/sfont.h	2012-10-10 10:52:39.564490461 +0200
+++ include/fluidsynth/sfont.h	2012-10-10 12:13:41.429558355 +0200
@@ -244,7 +244,7 @@
   int pitchadj;                 /**< Fine pitch adjustment (+/- 99 cents) */
   int sampletype;               /**< Values: #FLUID_SAMPLETYPE_MONO, FLUID_SAMPLETYPE_RIGHT, FLUID_SAMPLETYPE_LEFT, FLUID_SAMPLETYPE_ROM */
   int valid;                    /**< Should be TRUE if sample data is valid, FALSE otherwise (in which case it will not be synthesized) */
-  short* data;                  /**< Pointer to the sample's data */
+  const short* data;            /**< Pointer to the sample's data */
 
   int amplitude_that_reaches_noise_floor_is_valid;      /**< Indicates if \a amplitude_that_reaches_noise_floor is valid (TRUE), set to FALSE initially to calculate. */
   double amplitude_that_reaches_noise_floor;            /**< The amplitude at which the sample's loop will be below the noise floor.  For voice off optimization, calculated automatically. */
