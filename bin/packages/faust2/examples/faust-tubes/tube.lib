/**
 **  tube.lib  Guitar(ix) tube amp emulations
 **  
 **  
 **  this tube library provide the following tube models:
 **  T1_12AX7, T2_12AX7, T3_12AX7, T1_12AT7, T2_12AT7, T3_12AT7, 
 **  T1_12AU7, T2_12AU7, T3_12AU7, T1_6V6, T2_6V6, T3_6V6, 
 **  T1_6DJ8, T2_6DJ8, T3_6DJ8, T1_6C16, T2_6C16, T3_6C16 
 **
 **  
 **  USAGE:
 **        _:component("tube.lib").model:_
 **  where
 **       model is on of the models above.
 ** 
 **  EXAMPLE 2 STAGE TUBE PREAMP:
 **    process = component("tube.lib").T1_12AX7 : *(preamp):
 **      lowpass(1,6531.0) : component("tube.lib").T2_12AX7 : *(preamp): 
 **      lowpass(1,6531.0) : component("tube.lib").T3_12AX7 : *(gain) with {
 **      preamp = vslider("Pregain",-6,-20,20,0.1) : db2linear : smooth(0.999);
 **      gain  = vslider("Gain", -6, -20.0, 20.0, 0.1) : db2linear : smooth(0.999);
 **    };  
 **
 **/

declare name      "Tube Emulation Library";
declare author    "Guitarix project (http://guitarix.sourceforge.net/)";
declare copyright "Guitarix project";
declare version   "0.28";
declare license   "LGPL";


import("filter.lib");

// simple triode circuit emulation

Ftube = ffunction(float Ftube(int,float), "valve.h", "");

TB_12AX7_68k  = fconstant(int TUBE_TABLE_12AX7_68k,  "valve.h");
TB_12AX7_250k = fconstant(int TUBE_TABLE_12AX7_250k, "valve.h");
TB_12AT7_68k  = fconstant(int TUBE_TABLE_12AT7_68k,  "valve.h");
TB_12AT7_250k = fconstant(int TUBE_TABLE_12AT7_250k, "valve.h");
TB_12AU7_68k  = fconstant(int TUBE_TABLE_12AU7_68k,  "valve.h");
TB_12AU7_250k = fconstant(int TUBE_TABLE_12AU7_250k, "valve.h");
TB_6V6_68k    = fconstant(int TUBE_TABLE_6V6_68k,    "valve.h");
TB_6V6_250k   = fconstant(int TUBE_TABLE_6V6_250k,   "valve.h");
TB_6DJ8_68k   = fconstant(int TUBE_TABLE_6DJ8_68k,   "valve.h");
TB_6DJ8_250k  = fconstant(int TUBE_TABLE_6DJ8_250k,  "valve.h");
TB_6C16_68k   = fconstant(int TUBE_TABLE_6C16_68k,   "valve.h");
TB_6C16_250k  = fconstant(int TUBE_TABLE_6C16_250k,  "valve.h");

tubestageF(tb,vplus,divider,fck,Rk,Vk0) = tube : hpf with {
    lpfk = lowpass(1,fck);
    Rp = 100.0e3;
    VkC = Vk0 * (Rp/Rk);
    tube = (+ : -(Vk0) : Ftube(tb) : +(VkC-vplus)) ~ (*(Rk/Rp) : lpfk) : /(divider);
    hpf = highpass(1,31.0);
};

tubestage(tb,fck,Rk,Vk0)       = tubestageF(tb,250.0,40.0,fck,Rk,Vk0);
tubestage130_20(tb,fck,Rk,Vk0) = tubestageF(tb,130.0,20.0,fck,Rk,Vk0);

// basic tube settings to model stage 1 - 2

T1_12AX7 = tubestage(TB_12AX7_68k,86.0,2700.0,1.581656);
T2_12AX7 = tubestage(TB_12AX7_250k,132.0,1500.0,1.204285);
T3_12AX7 = tubestage(TB_12AX7_250k,194.0,820.0,0.840703);
T1_12AT7 = tubestage(TB_12AT7_68k,86.0,2700.0,2.617753);
T2_12AT7 = tubestage(TB_12AT7_250k,132.0,1500.0,1.887332);
T3_12AT7 = tubestage(TB_12AT7_250k,194.0,820.0,1.256962);
T1_12AU7 = tubestage(TB_12AU7_68k,86.0,2700.0,3.718962);
T2_12AU7 = tubestage(TB_12AU7_250k,132.0,1500.0,2.314844);
T3_12AU7 = tubestage(TB_12AU7_250k,194.0,820.0,1.356567);
T1_6V6   = tubestage(TB_6V6_68k,86.0,2700.0,2.296150);
T2_6V6   = tubestage(TB_6V6_250k,132.0,1500.0,1.675587);
T3_6V6   = tubestage(TB_6V6_250k,194.0,820.0,1.130462);
T1_6DJ8  = tubestage130_20(TB_6DJ8_68k,86.0,2700.0,1.863946);
T2_6DJ8  = tubestage130_20(TB_6DJ8_250k,132.0,1500.0,1.271609);
T3_6DJ8  = tubestage130_20(TB_6DJ8_68k,194.0,820.0,0.799031);
T1_6C16  = tubestage(TB_6C16_68k,86.0,2700.0,2.921806);
T2_6C16  = tubestage(TB_6C16_250k,132.0,1500.0,2.097743);
T3_6C16  = tubestage(TB_6C16_250k,194.0,820.0,1.378742);
