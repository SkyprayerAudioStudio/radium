/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.dsp_faust;
import android.util.Log;

public class dsp_faust {
  public static void init(int arg0, int arg1) {
    Log.d("FaustJava", "JNI init");
    dsp_faustJNI.init(arg0, arg1);
  }

  public static boolean start() {
    Log.d("FaustJava", "JNI start");
    return dsp_faustJNI.start();
  }

  public static void stop() {
    Log.d("FaustJava", "JNI stop");
    dsp_faustJNI.stop();
  }

  public static void destroy() {
    Log.d("FaustJava", "JNI destroy");
    dsp_faustJNI.destroy();
  }

  public static boolean isRunning() {
    return dsp_faustJNI.isRunning();
  }

  public static int keyOn(int arg0, int arg1) {
    return dsp_faustJNI.keyOn(arg0, arg1);
  }

  public static int keyOff(int arg0) {
    return dsp_faustJNI.keyOff(arg0);
  }

  public static String getJSON() {
    return dsp_faustJNI.getJSON();
  }

  public static int getParamsCount() {
    return dsp_faustJNI.getParamsCount();
  }

  public static void setParamValue(String arg0, float arg1) {
    dsp_faustJNI.setParamValue(arg0, arg1);
  }
    
  public static float getParamValue(String arg0) {
    return dsp_faustJNI.getParamValue(arg0);
  }

  public static int setVoiceParamValue(String arg0, int arg1, float arg2) {
    return dsp_faustJNI.setVoiceParamValue(arg0, arg1, arg2);
  }
    
  public static float getVoiceParamValue(String arg0, int arg1) {
    return dsp_faustJNI.getVoiceParamValue(arg0, arg1);
  }

  public static String getParamAddress(int arg0) {
    return dsp_faustJNI.getParamAddress(arg0);
  }

  public static void propagateAcc(int acc, float arg1) {
    dsp_faustJNI.propagateAcc(acc, arg1);
  }

  public static void setAccConverter(int p, int acc, int curve, float amin, float amid, float amax) {
     dsp_faustJNI.setAccConverter(p, acc, curve, amin, amid,  amax);
  }

  public static void propagateGyr(int gyr, float arg1) {
    dsp_faustJNI.propagateGyr(gyr, arg1);
  }

  public static void setGyrConverter(int p, int gyr, int curve, float amin, float amid, float amax) {
     dsp_faustJNI.setGyrConverter(p, gyr, curve, amin, amid,  amax);
  }

  public static float getCPULoad() {
    return dsp_faustJNI.getCPULoad();
  }

  // return -1 when no screen color control is requested, otherwise the current color to display 0xRRGGBB.
  public static int getScreenColor() {
     return dsp_faustJNI.getScreenColor();
  }

}
