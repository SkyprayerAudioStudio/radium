--- Visualization-Library-master/src/vlQt5/Qt5ThreadedWidget.hpp_org	2019-12-05 14:27:09.113122609 +0100
+++ Visualization-Library-master/src/vlQt5/Qt5ThreadedWidget.hpp	2019-12-05 14:25:25.611546234 +0100
@@ -71,7 +71,8 @@
         WHEEL,
         KEYPRESS,
         KEYRELEASE,
-        DESTROY
+        RESIZE,
+        DESTROY        
       } type;
       vl::EMouseButton button;
       int x;
@@ -90,17 +91,20 @@
       QMutex mutex;
       QQueue<Event> queue;
 
+#if 0
       QAtomicInt widget_width;
       QAtomicInt widget_height;
-
-      QTime time;
+#endif
+      //QTime time;
 
       QSemaphore *wait_semaphore;
       
       MyThread(Qt5ThreadedWidget* widget)
         : _widget(widget)
+#if 0
         , widget_width(10)
         , widget_height(10)
+#endif
       {
       }
 
@@ -130,6 +134,9 @@
           case Event::KEYRELEASE:
             dispatchKeyReleaseEvent(e.unicode_ch,e.key);
             break;
+          case Event::RESIZE:
+            dispatchResizeEvent(e.x, e.y);
+            break;
           case Event::DESTROY:
             printf("Calling destroy\n");
             dispatchDestroyEvent();
@@ -178,9 +185,11 @@
       }
 
       void run() {
+#if 0
         int width = 0;
         int height = 0;
-
+#endif
+        
         Qt5ThreadedWidget *widget = _widget;
 
         _widget->makeCurrent();
@@ -194,16 +203,18 @@
 
         while(handle_events()==true){
 
+#if 0
           int new_height = widget_height.load();
           int new_width  = widget_width.load();
           
           if(new_height!=height || new_width!=width){
             width = new_width;
             height = new_height;
-            printf("resizing to %d/%d\n",width,height);
+            printf("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& resizing to %d/%d\n",width,height);
             dispatchResizeEvent(width,height);
           }
-
+#endif
+          
           //widget->swapBuffers();    
           
           dispatchRunEvent();
@@ -212,7 +223,7 @@
           
           //if(time.elapsed()>18)
           //  printf("hepp %d\n",(int)time.elapsed());
-          time.restart();
+          //time.restart();
           //QApplication::processEvents(QEventLoop::AllEvents, 1);
         }
 
@@ -222,6 +233,9 @@
 
     MyThread *mythread;
 
+    void is_patched(){
+    }
+    
     void startRendering() //override
     {
     }
@@ -230,8 +244,15 @@
     }
 
     void 	resizeEvent ( QResizeEvent *  ) {
+#if 0
       mythread->widget_width = width();
       mythread->widget_height = height();
+#endif
+      Event e;
+      e.type=Event::RESIZE;
+      e.x = width();
+      e.y = height();
+      mythread->push_event(e);
     }
     //virtual void 	updateGL () {}
     //virtual void 	paintGL () {}
@@ -402,6 +423,7 @@
     ~Qt5ThreadedWidget()
     {
       stop();
+      delete mythread;
     }
 
     void stop(){
