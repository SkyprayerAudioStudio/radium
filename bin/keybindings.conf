
# This file defines the keybindings for Radium.
# Radium parses this file, and sometime use parts of it to make a new generated file named
# "keybindings_generated.py", which again is loaded into Radium
#


*
import radium as ra
*

?define  EDITOR       FOCUS_EDITOR
?define  MIXER        FOCUS_MIXER
?define  SEQUENCER    FOCUS_SEQUENCER
?define  MIXERSTRIPS  FOCUS_MIXERSTRIPS


####################################################################
?out ********** Computer Keyboard Note Playing/Editing ************
####################################################################

?define POLYSWITCH SHIFT_L
?define DOWNPLAY                         ra.keyDownPlay
?define DOWNPOLYPLAY EDITOR POLYSWITCH : ra.polyKeyDownPlay
?define UPPLAY EDITOR UP POLYSWITCH    : ra.keyUpPlay
?define UPPOLYPLAY EDITOR UP           : ra.keyUpPlay

?define(a) KEYHANDLE DOWNPLAY a ?n DOWNPOLYPLAY a ?n UPPLAY a ?n UPPOLYPLAY a

QWERTY_Z   EDITOR :	KEYHANDLE 0
QWERTY_S   EDITOR :	KEYHANDLE 1
QWERTY_X   EDITOR :	KEYHANDLE 2
QWERTY_D   EDITOR :	KEYHANDLE 3
QWERTY_C   EDITOR :	KEYHANDLE 4
QWERTY_V   EDITOR :	KEYHANDLE 5
QWERTY_G   EDITOR :	KEYHANDLE 6
QWERTY_B   EDITOR :	KEYHANDLE 7
QWERTY_H   EDITOR :	KEYHANDLE 8
QWERTY_N   EDITOR :	KEYHANDLE 9
QWERTY_J   EDITOR :   KEYHANDLE 10
QWERTY_M   EDITOR :   KEYHANDLE 11
MR1        EDITOR :   KEYHANDLE 12
QWERTY_L   EDITOR :   KEYHANDLE 13
MR2        EDITOR :   KEYHANDLE 14
LR1        EDITOR :   KEYHANDLE 15
MR3        EDITOR :   KEYHANDLE 16
LR3        EDITOR :   KEYHANDLE 18

QWERTY_Q   EDITOR :   KEYHANDLE 12
QWERTY_2   EDITOR :   KEYHANDLE 13
QWERTY_W   EDITOR :   KEYHANDLE 14
QWERTY_3   EDITOR :   KEYHANDLE 15
QWERTY_E   EDITOR :   KEYHANDLE 16
QWERTY_R   EDITOR :   KEYHANDLE 17
QWERTY_5   EDITOR :   KEYHANDLE 18
QWERTY_T   EDITOR :   KEYHANDLE 19
QWERTY_6   EDITOR :   KEYHANDLE 20
QWERTY_Y   EDITOR :   KEYHANDLE 21
QWERTY_7   EDITOR :   KEYHANDLE 22
QWERTY_U   EDITOR :   KEYHANDLE 23
QWERTY_I   EDITOR :   KEYHANDLE 24
QWERTY_9   EDITOR :   KEYHANDLE 25
QWERTY_O   EDITOR :   KEYHANDLE 26
QWERTY_0   EDITOR :   KEYHANDLE 27
QWERTY_P   EDITOR :   KEYHANDLE 28
PR1 EDITOR :   KEYHANDLE 29
0R2 EDITOR :   KEYHANDLE 30
PR2 EDITOR :   KEYHANDLE 31
0R3 EDITOR :   KEYHANDLE 32


F1 EDITOR : ra.decKeyAdd 12
F2 EDITOR : ra.incKeyAdd 12


#F3: ra.setKeyAdd 24
#F4: ra.setKeyAdd 72
#F5: ra.setKeyAdd 96

#TAB         : ra.incKeyAdd 24
#    SHIFT_L : ra.decKeyAdd 24

TAB: ra.switchWindowConfiguration

ESC EDITOR : ra.switchEditOnOff

1            EDITOR : ra.unsplitLine
1L1          EDITOR : ra.splitLine 2
    CTRL_L   EDITOR : ra.switchScrollPlayOnOff
    ALT_L    EDITOR : ra.switchSoundScrollOnOff



####################################################################
?out *** Navigating / Expand line / Track on/off / Note volumes / Various ****
####################################################################

PAGE_DOWN    EDITOR : ra.cursorDown 32
    CTRL_L   EDITOR : ra.copyEditorTrackOnOffToSeqblock
    CTRL_R   EDITOR : ra.copyEditorTrackOnOffToSeqblock    
    CTRL_L   SEQUENCER : ra.copyEditorTrackOnOffToSeqblock
    CTRL_R   SEQUENCER : ra.copyEditorTrackOnOffToSeqblock    
    
PAGE_UP      EDITOR : ra.cursorUp 32
    CTRL_L   EDITOR : ra.copySeqblockTrackOnOffToEditor
    CTRL_R   EDITOR : ra.copySeqblockTrackOnOffToEditor    
    CTRL_L   SEQUENCER : ra.copySeqblockTrackOnOffToEditor
    CTRL_R   SEQUENCER : ra.copySeqblockTrackOnOffToEditor    

HOME         EDITOR : ra.cursorPercentLine 0
END          EDITOR : ra.evalScheme "(if (= (ra:current-line) (- (ra:get-num-lines) 1)) (ra:cursor-percent-line 0) (ra:cursor-percent-line 100))"

DOWNARROW    EDITOR : ra.cursorDown 1
    SHIFT_L CTRL_L  EDITOR : ra.evalScheme "(line-zoom-out-exponentially)"
    SHIFT_L EXTRA_L  EDITOR : ra.evalScheme "(line-zoom-out-exponentially)"
    SHIFT_R  EDITOR : ra.cursorDown 8
    ALT_R    EDITOR : ra.cursorNextSomething
    SHIFT_L  EDITOR : ra.lineZoomBlock 1
    ALT_L    EDITOR : ra.insertLines 1
    CTRL_L : ra.selectNextPlaylistBlock
    CTRL_R : ra.selectNextPlaylistBlock

          SEQUENCER : ra.evalScheme "(ra:set-curr-seqtrack (+ (ra:get-curr-seqtrack) 1))"

UPARROW      EDITOR : ra.cursorUp 1
    SHIFT_L CTRL_L  EDITOR : ra.evalScheme "(line-zoom-in-exponentially)"
    SHIFT_L EXTRA_L  EDITOR : ra.evalScheme "(line-zoom-in-exponentially)"
    SHIFT_R  EDITOR : ra.cursorUp 8
    ALT_R    EDITOR : ra.cursorPrevSomething
    SHIFT_L  EDITOR : ra.lineZoomBlock -1
    ALT_L    EDITOR : ra.insertLines -1
    CTRL_L  EDITOR : ra.selectPrevPlaylistBlock
    CTRL_R  EDITOR : ra.selectPrevPlaylistBlock

         SEQUENCER : ra.evalScheme "(ra:set-curr-seqtrack (- (ra:get-curr-seqtrack) 1))"

RIGHTARROW   EDITOR : ra.cursorRight
    SHIFT_R    EDITOR : ra.cursorNextTrack
    ALT_R  EDITOR : ra.incNoteVolume 1
    SHIFT_R ALT_R  EDITOR : ra.incNoteVolume 10
    SHIFT_L  EDITOR : ra.expandLine 1
    CTRL_L  EDITOR : ra.selectNextBlock
    CTRL_R  EDITOR : ra.selectNextBlock

    SEQUENCER : ra.selectNextSeqblock
    
LEFTARROW    EDITOR : ra.cursorLeft
    SHIFT_R    EDITOR : ra.cursorPrevTrack
    ALT_R  EDITOR : ra.incNoteVolume -1
    SHIFT_R ALT_R  EDITOR : ra.incNoteVolume -10
    SHIFT_L  EDITOR : ra.expandLine -1
    CTRL_L  EDITOR :ra.selectPrevBlock
    CTRL_R  EDITOR :ra.selectPrevBlock

    SEQUENCER : ra.selectPrevSeqblock


J:
   CTRL_L     EDITOR : ra.requestCursorMove
   CTRL_R     EDITOR : ra.requestCursorMove
#F6   EDITOR : ra.cursorPercentLine    0
#F7   EDITOR : ra.cursorPercentLine   25
#F8   EDITOR : ra.cursorPercentLine   50
#F9   EDITOR : ra.cursorPercentLine   75
#F10  EDITOR : ra.cursorPercentLine  100

QWERTY_A:
    CTRL_L     EDITOR : ra.selectPrevBlock
    CTRL_R     EDITOR : ra.selectPrevBlock 

QWERTY_F:
    CTRL_L     EDITOR : ra.selectNextBlock
    CTRL_R     EDITOR : ra.selectNextBlock 
#    SHIFT_R  EDITOR : ra.selectNextPlaylistBlock
    SHIFT_L   EDITOR : ra.appendBlock    
    ALT_L    EDITOR : ra.appendTrack

#QWERTY_A:            ra.selectPrevBlock 
#    SHIFT_R  EDITOR : ra.selectPrevPlaylistBlock




?define KP_CTRL_L CTRL_L EDITOR : ra.selectTrack
?define KP_CAPS CAPS EDITOR : ra.selectTrack
?define KP_CTRL_L_CAPS CTRL_L CAPS EDITOR : ra.selectTrack

?define KP_CTRL_L_SW SHIFT_L CTRL_L EDITOR : ra.switchTrackOn 
?define KP_CAPS_SW SHIFT_L CAPS EDITOR : ra.switchTrackOn
?define KP_CTRL_L_CAPS_SW SHIFT_L CTRL_L CAPS EDITOR : ra.switchTrackOn

?define KP_CTRL_L_SO ALT_L CTRL_L EDITOR : ra.switchSoloTrack
?define KP_CAPS_SO ALT_L CAPS EDITOR : ra.switchSoloTrack 
?define KP_CTRL_L_CAPS_SO ALT_L CTRL_L CAPS EDITOR : ra.switchSoloTrack 

?define(a) KEYPAD_NAV ra.selectTrack a ?n KP_CTRL_L a +10 ?n KP_CAPS a +20 ?n KP_CTRL_L_CAPS a +30 ?n EDITOR SHIFT_L : ra.switchTrackOn a ?n KP_CTRL_L_SW a +10 ?n KP_CAPS_SW a +20 ?n KP_CTRL_L_CAPS_SW a +30 ?n EDITOR ALT_L : ra.switchSoloTrack a ?n KP_CTRL_L_SO a +10 ?n KP_CAPS_SO a +20 ?n KP_CTRL_L_CAPS_SO a +30

#################


KP_0	 EDITOR : KEYPAD_NAV 0
KP_1	 EDITOR : KEYPAD_NAV 1
KP_2	 EDITOR : KEYPAD_NAV 2
KP_3	 EDITOR : KEYPAD_NAV 3
KP_4	 EDITOR : KEYPAD_NAV 4
KP_5	 EDITOR : KEYPAD_NAV 5
KP_6	 EDITOR : KEYPAD_NAV 6
KP_7	 EDITOR : KEYPAD_NAV 7
KP_8	 EDITOR : KEYPAD_NAV 8
KP_9	 EDITOR : KEYPAD_NAV 9

*
def enter_play_keyboard_handler():
    if ra.isPlaying():
       was_playing_song = ra.isPlayingSong()
       ra.playStop()
       #ra.setSongPos(ra.getLastSongPosStart())
       if was_playing_song:
          ra.setLastSongPosStart(ra.getSongPos())
    else:
       ra.playSongFromCurrentSequencerPosition()

#def stop_and_set_back_cursor():
#    was_playing_song = ra.isPlayingSong()
#    ra.playStop()
#    if was_playing_song:
#      ra.setSongPos(ra.getLastSongPosStart())

def space_play_keyboard_handler():
    if ra.isPlaying():
       ra.playStop()
       #stop_and_set_back_cursor()
    else:
       ra.playSongFromPos(ra.getLastSongPosStart())
       #ra.playSongFromCurrentSequencerPosition()
*

KP_ENTER	:	keybinding.enter_play_keyboard_handler
        ALT_L    EDITOR :       ra.switchTrackOn
        ALT_R    EDITOR :       ra.switchTrackOn
	CTRL_L	 EDITOR :	ra.allTracksOn
	SHIFT_L	 EDITOR :	ra.switchSoloTrack
#        MOUSE_SEQUENCER : keybinding.enter_play_keyboard_handler
#        MOUSE_MIXER : keybinding.enter_play_keyboard_handler
        

####################################################################
?out ************************* Zoom ********************************
####################################################################

KP_SUB:
        EDITOR          : ra.zoom -1
	CTRL_L		 EDITOR : ra.zoom -4
	CTRL_R		 EDITOR : ra.zoom -8

KP_ADD:
        EDITOR          : ra.zoom 1
	CTRL_L		 EDITOR : ra.zoom 4
	CTRL_R		 EDITOR : ra.zoom 8

KP_MUL EDITOR : ra.unzoom


####################################################################
?out ******** Extra keybindings for keyboards without keypad *******
####################################################################
F3:
       EDITOR         : ra.switchTrackOn
       CTRL_L EDITOR  : ra.allTracksOn

F4:
       EDITOR         : ra.switchSoloTrack
       CTRL_L EDITOR  : ra.allTracksOn


F5:
               : ra.showHideEditor
       CTRL_L  : ra.setEditorKeyboardFocus
       CTRL_R  : ra.setEditorKeyboardFocus
#      EDITOR CTRL_L         : ra.zoom -4
#      EDITOR CTRL_R         : ra.zoom -8
       EDITOR SHIFT_L : ra.unzoom


F6:              ra.showHidePlaylist
       CTRL_L  : ra.setSequencerKeyboardFocus
       CTRL_R  : ra.setSequencerKeyboardFocus
#       CTRL_L         : ra.zoom 4
#       CTRL_R         : ra.zoom 8


1 SHIFT_R  EDITOR : ra.selectTrack 1
2 SHIFT_R  EDITOR : ra.selectTrack 2
3 SHIFT_R  EDITOR : ra.selectTrack 3
4 SHIFT_R  EDITOR : ra.selectTrack 4
5 SHIFT_R  EDITOR : ra.selectTrack 5
6 SHIFT_R  EDITOR : ra.selectTrack 6
7 SHIFT_R  EDITOR : ra.selectTrack 7
8 SHIFT_R  EDITOR : ra.selectTrack 8
9 SHIFT_R  EDITOR : ra.selectTrack 9
0 SHIFT_R  EDITOR : ra.selectTrack 0

1 CTRL_R  EDITOR : ra.switchTrackOn 1
2 CTRL_R  EDITOR : ra.switchTrackOn 2
3 CTRL_R  EDITOR : ra.switchTrackOn 3
4 CTRL_R  EDITOR : ra.switchTrackOn 4
5 CTRL_R  EDITOR : ra.switchTrackOn 5
6 CTRL_R  EDITOR : ra.switchTrackOn 6
7 CTRL_R  EDITOR : ra.switchTrackOn 7
8 CTRL_R  EDITOR : ra.switchTrackOn 8
9 CTRL_R  EDITOR : ra.switchTrackOn 9
0 CTRL_R  EDITOR : ra.switchTrackOn 0


# Free keys:
# * W


####################################################################
?out *********** Note manipulation / Undo / Various ****************
####################################################################

U:
	CTRL_L		 EDITOR : ra.transposeBlock 1
	CTRL_L	SHIFT_L	 EDITOR : ra.transposeBlock 12
	ALT_L		 EDITOR : ra.transposeTrack 1
	ALT_L	SHIFT_L	 EDITOR : ra.transposeTrack 12
	EXTRA_L		 EDITOR : ra.transposeRange 1
	EXTRA_L	SHIFT_L	 EDITOR : ra.transposeRange 12
	ALT_R		 EDITOR : ra.transposeNote 1
	ALT_R	SHIFT_R	 EDITOR : ra.transposeNote 12

#	EXTRA_R	ALT_R		 EDITOR : ra.setMaxUndos


Z:
	CTRL_L  	: ra.undo
	CTRL_R  	: ra.undo
	CTRL_R	SHIFT_R	: ra.redo
	CTRL_R	SHIFT_L	: ra.redo
	CTRL_L	SHIFT_R	: ra.redo
	CTRL_L	SHIFT_L	: ra.redo

D:
	CTRL_L		 EDITOR : ra.transposeBlock -1
	CTRL_L	SHIFT_L	 EDITOR : ra.transposeBlock -12
	ALT_L		 EDITOR : ra.transposeTrack -1
	ALT_L	SHIFT_L	 EDITOR : ra.transposeTrack -12
	EXTRA_L		 EDITOR : ra.transposeRange -1
	EXTRA_L	SHIFT_L	 EDITOR : ra.transposeRange -12
	ALT_R		 EDITOR : ra.transposeNote -1
	ALT_R	SHIFT_R	 EDITOR : ra.transposeNote -12

G:
	ALT_R		 EDITOR : ra.glissando

Q:
	CTRL_L		 EDITOR : ra.quantitizeBlock
	ALT_L		 EDITOR : ra.generalTrackQuantitize
	EXTRA_L		 EDITOR : ra.quantitizeRange
        SHIFT_R          EDITOR : ra.configQuantitize
#	EXTRA_R		: ra.quit

8:
	CTRL_L		 EDITOR : ra.invertBlock
	ALT_L		 EDITOR : ra.invertTrack
	EXTRA_L		 EDITOR : ra.invertRange

9:
	CTRL_L		 EDITOR : ra.backwardsBlock
	ALT_L		 EDITOR : ra.backwardsTrack
        EXTRA_L		 EDITOR : ra.backwardsRange

6:
	CTRL_L		 EDITOR : ra.pexpandBlock
	ALT_L		 EDITOR : ra.pexpandTrack
	EXTRA_L		 EDITOR : ra.pexpandRange

7:
	EXTRA_L		 EDITOR : ra.expandRange
       	CTRL_L		 EDITOR : ra.expandBlock


####################################################################
?out ************************ Playing ******************************
####################################################################
#SPACE			: *
#        if ra.isPlaying():
#           ra.playStop()
#        else:
#           ra.playBlockFromStart()
#*
SPACE                   : keybinding.space_play_keyboard_handler
        CTRL_L          : ra.playStop
        CTRL_R          : ra.playStop
	ALT_R		: ra.playSongFromStart
	SHIFT_R		: ra.playBlockFromCurrent
	ALT_R SHIFT_R	: ra.playSongFromCurrent
	EXTRA_L		: ra.playRangeFromStart
        CTRL_L          : ra.playStop
        CTRL_R          : ra.playStop
#        MOUSE_SEQUENCER : keybinding.space_play_keyboard_handler
#        MOUSE_MIXER : keybinding.space_play_keyboard_handler

MENU EDITOR :                     ra.configBlock
VOLUME_DOWN:              ra.volumeDown
VOLUME_UP:                ra.volumeUp
MUTE:                     ra.mute
PLAY:                     ra.playBlockFromStart
STOP:                     ra.playStop


####################################################################
?out *************** ClipBoard / Various ***************************
####################################################################

Z:
	EXTRA_L		 EDITOR : ra.cancelRange
X:
	EXTRA_L		        EDITOR : ra.cutRange
	ALT_L		        EDITOR : ra.cutTrack
        
        CTRL_L MOUSE_MIXER     MIXER : ra.cutSelectedMixerObjects
        CTRL_L MOUSE_SEQUENCER SEQUENCER : ra.cutSelectedSeqblocks
        CTRL_R MOUSE_MIXER     MIXER : ra.cutSelectedMixerObjects
        CTRL_R MOUSE_SEQUENCER SEQUENCER : ra.cutSelectedSeqblocks
        
C:
	EXTRA_L		        EDITOR : ra.copyRange
	ALT_L		        EDITOR : ra.copyTrack
#	EXTRA_R		        EDITOR : ra.configWindow # EXTRA_R can't be used as modfier anymore.

        CTRL_L MOUSE_EDITOR     EDITOR : ra.copyBlock
        CTRL_R MOUSE_EDITOR     EDITOR : ra.copyBlock
        
	CTRL_L MOUSE_MIXER       MIXER : ra.copySelectedMixerObjects
       	CTRL_L MOUSE_SEQUENCER  SEQUENCER : ra.copySelectedSeqblocks
	CTRL_R MOUSE_MIXER       MIXER : ra.copySelectedMixerObjects
       	CTRL_R MOUSE_SEQUENCER  SEQUENCER : ra.copySelectedSeqblocks

V:
	EXTRA_L		 EDITOR : ra.pasteRange
	ALT_L		 EDITOR : ra.pasteTrack
        
        CTRL_L MOUSE_EDITOR     EDITOR : ra.pasteBlock
        CTRL_R MOUSE_EDITOR     EDITOR : ra.pasteBlock
        
	CTRL_L MOUSE_MIXER      MIXER  : ra.pasteMixerObjects
       	CTRL_L MOUSE_SEQUENCER  SEQUENCER : ra.pasteSeqblocks
	CTRL_R MOUSE_MIXER      MIXER  : ra.pasteMixerObjects
       	CTRL_R MOUSE_SEQUENCER  SEQUENCER : ra.pasteSeqblocks

B:
	EXTRA_L		 EDITOR : ra.markRange
#	EXTRA_R		 EDITOR : ra.configBlock # EXTRA_R can't be used as modfier anymore.


####################################################################
?out ************************ Various ******************************
####################################################################

1:
        CTRL_L		 EDITOR : ra.setNoteScrollLength 1

2:
        CTRL_L		 EDITOR : ra.setNoteScrollLength 2

3:
        CTRL_L		 EDITOR : ra.setNoteScrollLength 3

4:
        CTRL_L		 EDITOR : ra.setNoteScrollLength 4

5:
        CTRL_L		 EDITOR : ra.setNoteScrollLength 5


BACKSPACE		 EDITOR : ra.insertReallines -1
	ALT_L		 EDITOR : ra.insertReallines 1

INSERT:
        CTRL_L          : ra.playlistInsert
        CTRL_R          : ra.playlistInsert

DEL:
                         EDITOR : ra.generalDelete True
       SHIFT_L 	         EDITOR : ra.generalDelete False
       SHIFT_R 	         EDITOR : ra.generalDelete False
       CTRL_L            EDITOR : ra.playlistRemove
       CTRL_R            EDITOR : ra.playlistRemove
                      SEQUENCER : ra.deleteSeqblock
                      
                      
QWERTY_A EDITOR :                ra.generalDelete

RETURN			: keybinding.enter_play_keyboard_handler
        ALT_L            EDITOR : ra.generalReturn
        ALT_R            EDITOR : ra.generalReturn
	SHIFT_L		 EDITOR : ra.insertLines
#        MOUSE_SEQUENCER : keybinding.enter_play_keyboard_handler
#        MOUSE_MIXER : keybinding.enter_play_keyboard_handler


F7                      : ra.showHideMixerWidget
       CTRL_L           : ra.setMixerKeyboardFocus
       CTRL_R           : ra.setMixerKeyboardFocus
F8                      : ra.showHideSequencer
       CTRL_L           : ra.setSequencerKeyboardFocus
       CTRL_R           : ra.setSequencerKeyboardFocus
F9                     : ra.showHideInstrumentWidget
       CTRL_L  : ra.setMixerKeyboardFocus
       CTRL_R  : ra.setMixerKeyboardFocus
F10                     : ra.showHideEditWidget
       CTRL_L  : ra.setEditorKeyboardFocus
       CTRL_R  : ra.setEditorKeyboardFocus

F11              	: ra.toggleCurrWindowFullScreen
#F11 MOUSE_EDITOR	: ra.toggleFullScreen
#F11 MOUSE_MIXER		: ra.toggleFullScreen
#F11 MOUSE_SEQUENCER	: ra.toggleFullScreen
#F11 MOUSE_MIXERSTRIPS   : ra.evalScheme "(toggle-current-mixer-strips-fullscreen)"
F12                      EDITOR : ra.selectInstrumentForTrack
#F12 CTRL_L              : ra.evalScheme "(let ((id (<ra> :create-audio-instrument-from-description (<ra> :request-load-preset-instrument-description)))) (when (not (= -1 id)) (<ra> :autoposition-instrument id) (<ra> :connect-audio-instrument-to-main-pipe id)))    "

S:
	ALT_L		 EDITOR : ra.swapTracks
        
         # Change "#f" to "#t" below if you want to split at grid
        SEQUENCER       : ra.evalScheme "(FROM_C-split-sample-seqblock-under-mouse #f)"
        
	CTRL_L		: ra.save
	CTRL_R		: ra.save

	CTRL_L	SHIFT_L	: ra.saveAs
	CTRL_R	SHIFT_L	: ra.saveAs
	CTRL_L	SHIFT_R	: ra.saveAs
	CTRL_R	SHIFT_R	: ra.saveAs

#        CTRL_L MOUSE_SEQUENCER : ra.save
#        CTRL_R MOUSE_SEQUENCER : ra.save
#	CTRL_L		: ra.splitBlock 
#       EXTRA_R	SHIFT_R	: ra.saveAs

N:
	ALT_L		 EDITOR : ra.showHideNoteTrack
	CTRL_L		 EDITOR : ra.showHideNoteTracksInBlock

W:
	ALT_L		 EDITOR : ra.changeTrackNoteAreaWidth
	CTRL_L		 EDITOR : ra.changeBlockNoteAreaWidth

M:
	ALT_L		 EDITOR : ra.minimizeTrack
	CTRL_L		 EDITOR : ra.minimizeBlockTracks

T:
	ALT_L		 EDITOR : ra.switchTrackNoteShowType
	CTRL_L		 EDITOR : ra.switchBlockNoteShowType

P:
        ALT_L            EDITOR : ra.showHidePianoroll
        CTRL_L           EDITOR : ra.showHidePianorollInBlock

Y:
        ALT_L            EDITOR : ra.showHideVeltext
        CTRL_L           EDITOR : ra.showHideVeltextInBlock

R:
	ALT_L		 EDITOR : ra.deleteTracks 1
	CTRL_L		 EDITOR : ra.deleteBlock
        SHIFT_L         : ra.setRandomSampleForAllSelectedInstruments

I:
	ALT_L		 EDITOR : ra.insertTracks 1
	CTRL_L		 EDITOR : ra.insertBlock

O:
	CTRL_L		: ra.load
	CTRL_R		: ra.load


####################################################################
?out ********************* Advanced (examples) *********************
####################################################################

# How to run scheme code from keyboard shortcut:
#O ALT_L : *
#        ra.evalScheme("(c-display 50000)(newline)")
#*

