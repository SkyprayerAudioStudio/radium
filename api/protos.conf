
# This file contains info to generate radium.i, wraplistfunc.c, radium_wrap.c, radium_s7_wrap.c, and radium_proc.h
# It is also used by keybindingsconf.py to find default arguments.

# ?S lines are inserted into radium.i, and ?H lines are inserted into radium_proc.h

# Important, syntax must be: "char* funcname", not: "char<space>*funcname" or "char<space>*<space>funcname".




#/*******************************************
#  Initialization
#*******************************************/

init_radium 		| const_char* arg | PyObject* gkf



#/*******************************************
#  Computer Keyboard Note Playing/Editing 
#*******************************************/

keyDownPlay 		| int notenum | int windownum ? -1
polyKeyDownPlay 	| int notenum | int windownum ? -1
keyUpPlay 		| int notenum | int windownum ? -1

setKeyAdd 		| int addnum
incKeyAdd 		| int incaddnum
decKeyAdd 		| int decaddnum

switchEditOnOff
switchSoundScrollOnOff	| int windownum ? -1

incNoteVolume | int incvolume | int windownum ? -1

bool doScrollPlay
setScrollPlay | bool doit
switchScrollPlayOnOff

bool doAutoRepeat
setAutoRepeat | bool doit

bool doRangePasteCut
setRangePasteCut | bool doit

bool doRangePasteScrollDown
setRangePasteScrollDown | bool doit

bool doScrollEditLines
setScrollEditLines | bool doit
setNoteScrollLength | int length
int getNoteScrollLength


#/*******************************************
#  Navigating 
#*******************************************/

cursorDown		| int numlines | int windownum ? -1
cursorUp 		| int numlines | int windownum ? -1

cursorNextNote | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
cursorPrevNote | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
cursorNextWaveform | int polyphony_num ? -1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
cursorPrevWaveform | int polyphony_num ? -1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
cursorNextVelocity | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
cursorPrevVelocity | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
cursorNextFx | int fxnum ? -1 |int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
cursorPrevFx | int fxnum ? -1 |int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
cursorNextSomething | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
cursorPrevSomething | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

int getCurrRealline | int blocknum ? -1 | int windownum ? -1
void setCurrRealline | int realline | int blocknum ? -1 | int windownum ? -1

cursorUserInputLine
requestCursorMove
cursorPercentLine 	| int percent | int windownum ? -1

selectNextBlock 	| int windownum ? -1
selectPrevBlock 	| int windownum ? -1
selectNextPlaylistBlock
selectPrevPlaylistBlock
selectTrack 		| int tracknum | int windownum ? -1

cursorRight 		| int windownum ? -1
cursorNextTrack 	| int windownum ? -1
cursorLeft		| int windownum ? -1
cursorPrevTrack 	| int windownum ? -1

int currentBlock        | int windownum ? -1
int currentTrack        | int blocknum ? -1 | int windownum ? -1
int currentLine         | int blocknum ? -1 | int windownum ? -1
setCurrentLine | int linenum | int windownum ? -1



#/*******************************************
#  Track on/off
#*******************************************/

allTracksOn

bool trackOn | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
switchTrackOn		| int tracknum ? -1 | int windownum ? -1
soloTrack		| int tracknum ? -1 | int windownum ? -1
switchSoloTrack		| int tracknum ? -1 | int windownum ? -1


#/*******************************************
#  Zoom
#*******************************************/

expandBlock | int blocknum ? -1
expandRange | int blocknum ? -1 | int windownum ? -1

lineZoomBlock | int numlines | int blocknum ? -1 | int windownum ? -1 # 'numlines' is lz in the format described in getLineZoomBlock. (TODO: don't use this format)
int getLineZoomBlock | int blocknum ? -1 | int windownum ? -1 # if the return value < 0, then lz = 1/return value. (TODO: don't use this format)
dyn_t getLineZoomBlockRatio | int blocknum ? -1 | int windownum ? -1 # Returns the actual lz value.

expandLine | int numlines | int windownum ? -1

splitLine | int numlines | int windownum ? -1

unsplitLine | int windownum ? -1

zoom | int incfontsize | int windownum ? -1

unzoom | int windownum ? -1


#/*******************************************
#  Notes
#*******************************************/

transposeTrack | int transpose | int windownum ? -1
transposeBlock | int transpose | int windownum ? -1
transposeRange | int transpose | int windownum ? -1
transposeNote | int transpose | int windownum ? -1

invertTrack | int windownum ? -1
invertBlock | int windownum ? -1
invertRange | int windownum ? -1

pexpandTrack | int f ? -1000 | int windownum ? -1
pexpandBlock | int f ? -1000 | int windownum ? -1
pexpandRange | int f ? -1000 | int windownum ? -1

backwardsTrack | int windownum ? -1
backwardsBlock | int windownum ? -1
backwardsRange | int windownum ? -1

generalTrackQuantitize | int windownum ? -1
quantitizeTrack | int windownum ? -1
quantitizeBlock | int windownum ? -1
quantitizeRange | int windownum ? -1

dyn_t getQuantitize | bool as_string ? false
void setQuantitize | dyn_t ratio # ratio can be a number or string. (we may use strings since rational numbers don't preserve denominator values)
int getQuantitizeType # see gui. 1 is the first option, 2 is the second, and so forth.
void setQuantitizeType | int type

configQuantitize | int windownum ? -1

Place getGrid

glissando | int windownum ? -1

const_char* getNoteName2 | int notenum ? -1
const_char* getNoteName3 | int notenum ? -1
float getNoteNameValue | const_char* notename

float getLowestKey | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getHighestKey | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

int getPianorollLowKey | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int getPianorollHighKey | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setPianorollLowKey | int key | int tracknum | int blocknum | int windownum ? -1
setPianorollHighKey | int key | int tracknum | int blocknum | int windownum ? -1

int getNoteVolume | int windownum ? -1 | int blocknum ? -1 | int tracknum ? -1 | dyn_t note ? g_dyn_minus_one
int getNumNotes | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

int addNote | float notevalue | float velocity | Place start | Place end | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int addNote3 | float notevalue | float velocity | int start_line | int start_counter | int start_dividor | int end_line ? -1 | int end_counter ? -1 | int end_dividor ? -1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
cutNote | Place place | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
deleteNote | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
bool noteContinuesNextBlock | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setNoteContinueNextBlock | bool continuenextblock | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

deleteAllNotesInTrack | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

undoNotes | int tracknum ? -1 | int blocknum ? -1
const_char* getNoteId | int notenum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
Place getNoteStart | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
Place getNoteEnd | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getNoteValue | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getNoteEndPitch | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1   
int getNoteSubtrack | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setNoMouseNote | int blocknum ? -1 | int windownum ? -1
setMouseNote | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
void updateNotesInPlayer # Currently, Radium doesn't play new notes until it starts playing a block from the beginning. This function updates the player immediately.

void unselectAllNotes
bool noteIsSelected | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
void selectNote | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
void unselectNote | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
dyn_t getSelectedNotes | int blocknum ? -1 | int windownum ? -1



#/*******************************************
#  Velocities
#*******************************************/

float getVelocityX | int num | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getVelocityY | int num | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getVelocityValue | int num | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
Place getVelocityPlace | int num | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int getVelocityLogtype | int num | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int getNumVelocities | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int addVelocity | float value | Place place | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int addVelocityF | float value | float floatplace | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
dyn_t setVelocity | float value | Place place | int velocitynum | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1 # place can be 'same-place. Returns note.
dyn_t setVelocityF | float value | float floatplace | int velocitynum | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1 # place can be 'same-place. Returns note.
deleteVelocity | int velocitynum | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setVelocityLogtype | int logtype | int velocitynum | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setCurrentVelocityNode | int velocitynum | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setIndicatorVelocityNode | int velocitynum | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1



#/*******************************************
#  Pitches
#*******************************************/

float getPitchValue | int num | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
Place getPitchPlace | int num | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int getPitchLogtype | int num | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getPitchChance | int num | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int getNumPitches | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int addPitch | float value | Place place | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int addPitchF | float value | float floatplace | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
dyn_t setPitch | float value | Place place | int pitchnum | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1 # place can be 'same-place. Returns notenum.
dyn_t setPitchF | float value | float floatplace | int pitchnum | dyn_t note ? g_dyn_minus_one | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1 # place can be 'same-place. Returns notenum.
deletePitch | int pitchnum | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setPitchLogtype | int logtype | int pitchnum | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1




#/*******************************************
#  Editor tempo
#*******************************************/


setMainSignature | int numerator | int denominator
setMainLPB | int lpb
setMainBPM | int bpm

Place getMainSignature
int getMainLPB
int getMainBPM

int numSignatures | int blocknum ? -1 | int windownum ? -1 
int addSignature | int numerator | int denominator | Place place | int blocknum ? -1
int addSignature3 | int numerator | int denominator | int line | int counter | int dividor | int blocknum ? -1
Place getSignature | int signaturenum | int blocknum ? -1 | int windownum ? -1

int numLPBs | int blocknum ? -1  | int windownum ? -1 
int addLPB | int lpb | Place place | int blocknum ? -1
int addLPB3 | int lpb | int line | int counter | int dividor | int blocknum ? -1
int getLPB | int num | int blocknum ? -1 | int windownum ? -1
dyn_t getAllLPB | int blocknum ? -1 | int windownum ? -1

int numBPMs | int blocknum ? -1  | int windownum ? -1 
int addBPM | int bpm | Place place | int blocknum ? -1
int addBPM3 | int bpm | int line | int counter | int dividor | int blocknum ? -1
int getBPM | int num | int blocknum ? -1 | int windownum ? -1
Place getBPMPlace | int num | int blocknum ? -1 | int windownum ? -1
dyn_t getAllBPM | int blocknum ? -1 | int windownum ? -1

int getNumTemponodes | int blocknum ? -1 | int windownum ? -1

undoTemponodes
setTemponode | int num | float value | Place place | int blocknum ? -1 | int windownum ? -1 # if place.line < 0, a new place will not be set.
deleteTemponode | int num | int blocknum ? -1
int addTemponode | float value | Place place | int blocknum ? -1 | int windownum ? -1 # Returns the node number, or -1 if a node was not created.

dyn_t getAllTemponodes | int blocknum ? -1 | int windownum ? -1
dyn_t getAllBeats | int blocknum ? -1 | int windownum ? -1
dyn_t getAllBlockSwings | int blocknum ? -1 | int windownum ? -1
dyn_t getAllTrackSwings | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

#/*******************************************
#  Playing
#*******************************************/
playBlockFromStart | int windownum ? -1
playBlockFromCurrent | int windownum ? -1
playSongFromStart
playSongFromCurrent | int windownum ? -1
playRangeFromStart | int windownum ? -1
playRangeFromCurrent | int windownum ? -1

playStop
volumeUp
volumeDown
mute
bool isPlaying
bool isPlayingBlock # returns false if not playing
bool isPlayingSong # returns false if not playing

double lineDuration | int line | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1 # in seconds


#/*******************************************
#  Clipboard
#*******************************************/

cancelRange | int windownum ? -1
cutRange | int windownum ? -1
cutTrack | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
copyRange | int windownum ? -1
copyTrack | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
copyBlock | int windownum ? -1
pasteRange | int windownum ? -1
pasteTrack | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
pasteBlock | int windownum ? -1
markRange | int windownum ? -1

cutGeneral
copyGeneral
pasteGeneral

copySelectedMixerObjects
deleteSelectedMixerObjects
cutSelectedMixerObjects
int64_t pasteMixerObjects | float x ? -10000 | float y ? -10000

int getNumTracksInRange
Place getRangeLength

# These functions works on the currently marked range, not the clipboard. The functions above works on the range copied into the clipboard.
bool hasRange | int blocknum ? -1 | int windownum ? -1
int getRangeStartTrack | int blocknum ? -1 | int windownum ? -1
int getRangeEndTrack | int blocknum ? -1 | int windownum ? -1
Place getRangeStartPlace | int blocknum ? -1 | int windownum ? -1
Place getRangeEndPlace | int blocknum ? -1 | int windownum ? -1


void saveBlock | const_char* filename ? "" | int blocknum ? -1 | int windownum ? -1
void loadBlock | const_char* filename ? "" # BETA!
void saveTrack | const_char* filename ? "" | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
void loadTrack | const_char* filename_c ? "" | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

#/*******************************************
#  Undo
#*******************************************/

setMaxUndos | int windownum ? -1
const_char* getUndoHistory
redo
undo
resetUndo
startIgnoringUndo # careful. stopIgnoringUndo must be called later. I.e. stopIgnoringUndo must be put inside a finally clause. If not, undo may stop working.
stopIgnoringUndo
cancelLastUndo # undo adding an undo entry. Must only be called right after adding an undo (i.e. no user interaction). If not, anything could happen.
addUndoBlock
addUndoTrack
bool askAreYouSureSongHasChanged

openUndo # careful. closeUndo must be called later. I.e. closeUndo must be put inside a finally clause. If not, undo may stop working.
closeUndo

#/*******************************************
#  Various
#*******************************************/

editorWindowToFront | int windownum ? -1
playListWindowToFront
instrumentWindowToFront
helpWindowToFront

setMixerRotate | float rotate

bool showInstrumentWidgetWhenDoubleClickingSoundObject
void setShowInstrumentWidgetWhenDoubleClickingSoundObject | bool val

bool showPlaylistDuringStartup
void setShowPlaylistDuringStartup | bool val

bool showMixerStripDuringStartup
void setShowMixerStripDuringStartup | bool val

bool instrumentWidgetIsInMixer
void setInstrumentWidgetInMixer | bool val

bool showMixerStripOnLeftSide
void setShowMixerStripOnLeftSide | bool val

maximizeEditorWindow | int windownum ? -1
minimizeEditorWindow | int windownum ? -1

toggleCurrWindowFullScreen
toggleFullScreen | int windownum ? -1
showHideEditor | int windownum ? -1
showHideSequencer
switchSequencerPlaylistConfiguration
showHideMixerWidget

showHideInstrumentWidget | int windownum ? -1
showHidePlaylist | int windownum ? -1
showHideMixerStrip | int windownum ? -1

showHideEditWidget
void showEditGui
void hideEditGui
bool editGuiIsVisible

int getMaxSubmenuEntries
void setMaxSubmenuEntries | int val

showHideMenuBar | int windownum ? -1
hideMenuBar | int windownum ? -1
showMenuBar | int windownum ? -1

switchWindowConfiguration

enableMetronome | bool onoff

bool playCursorEnabled
enablePlayCursor | bool onoff
switchPlayCursorOnOff
enableEditorFollowsPlayCursor | bool onoff

insertReallines | int toinsert | int windownum ? -1
generalDelete | int windownum ? -1
insertLines | int toinsert ? 0 | int windownum ? -1 
generalReturn | int windownum ? -1
int appendBlock
appendTrack | int blocknum ? -1
swapTracks | int windownum ? -1
makeTrackMonophonic | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
splitTrackIntoMonophonicTracks | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
splitBlock | int windownum ? -1
setNumTracks | int numtracks | int blocknum ? -1 | int windownum ? -1
setNumLines | int numlines | int blocknum ? -1 | int windownum ? -1
changeTrackNoteLength | int windownum ? -1
changeBlockNoteLength | int windownum ? -1
changeTrackNoteAreaWidth | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
changeBlockNoteAreaWidth | int windownum ? -1
minimizeTrack | int windownum ? -1 | int blocknum ? -1 | int tracknum ? -1
minimizeBlockTracks | int windownum ? -1 | int blocknum ? -1
quit
saveSoundfile
openCommentDialog
openSongPropertiesDialog
openPreferencesDialog
openMIDIPreferencesDialog
openSequencerPreferencesDialog
openToolsDialog
openPluginManager
openMidiLearnPreferencesDialog
openAboutWindow
#const_char* getProgramPath
#const_char* appendPaths | const_char* path1 | const_char* path2
bool hasConfPath | const_char* filename
const_char* getConfPath | const_char* filename
const_char* getKeybindingsConfPath
const_char* getQualifierName | const_char* qualifier # returns "" if qualifier is not recognized.
const_char* getMenuesConfPath
const_char* getEmbeddedAudioFilesPath
setEmbeddedAudioFilesPath | const_char* new_path
save
saveAs
saveWithEmbeddedSamples
load
loadSong | const_char* filename
newSong
internal_updateAllBlockGraphics # internal. Call after changing several blocks simultaneously to avoid small delays when changing blocks later.
importMidi
requestImportMod # async
importXM
insertTracks | int numtracks | int windownum ? -1
insertTrack | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
deleteTracks | int numtracks | int windownum ? -1
deleteTrack | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
deleteBlock | int windownum ? -1
int insertBlock | int windownum ? -1
int getNumTracks | int blocknum ? -1
int getNumLines | int blocknum ? -1
int getNumReallines | int blocknum ? -1 | int windownum ? -1
int getNumBlocks
const_char* getBlockName | int blocknum ? -1
selectBlock | int blocknum | int windownum ? -1
setBlockColor | const_char* color | int blocknum ? -1 | int windownum ? -1
const_char* getBlockColor | int blocknum ? -1 | int windownum ? -1

setTrackNoteShowType | int type | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setTrackVolume | float volume | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setTrackPan | float pan | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
switchTrackNoteShowType | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setBlockNoteShowType | int type | int blocknum ? -1 | int windownum ? -1
switchBlockNoteShowType | int blocknum ? -1 | int windownum ? -1
int getTrackMidiChannel | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setTrackMidiChannel | int midi_channel | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

# swingtext, subtrack
showSwingtext | bool showit | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
bool swingtextVisible | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showHideSwingtext | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showHideSwingtextInBlock | int blocknum ? -1 | int windownum ? -1

bool centtextCanBeTurnedOff | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showCenttext | bool showit | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
bool centtextVisible | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showHideCenttext | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showHideCenttextInBlock | int blocknum ? -1 | int windownum ? -1

showChancetext | bool showit | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
bool chancetextVisible | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showHideChancetext | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showHideChancetextInBlock | int blocknum ? -1 | int windownum ? -1

showVeltext | bool showit | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
bool veltextVisible | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showHideVeltext | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showHideVeltextInBlock | int blocknum ? -1 | int windownum ? -1

showFxtext | bool showit | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
bool fxtextVisible | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showHideFxtext | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showHideFxtextInBlock | int blocknum ? -1 | int windownum ? -1

showPianoroll | bool showit | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
bool pianorollVisible | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showHidePianoroll | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showHidePianorollInBlock | int blocknum ? -1 | int windownum ? -1

showNoteTrack | bool showit | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
bool noteTrackVisible | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showHideNoteTrack | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
showHideNoteTracksInBlock | int blocknum ? -1 | int windownum ? -1

showHideSwingTrack | int windownum ? -1 #swingtext, global
showHideSignatureTrack | int windownum ? -1
showHideLPBTrack | int windownum ? -1
showHideBPMTrack | int windownum ? -1
showHideReltempoTrack | int windownum ? -1
bool swingTrackVisible | int windownum ? -1
bool signatureTrackVisible | int windownum ? -1
bool lpbTrackVisible | int windownum ? -1
bool bpmTrackVisible | int windownum ? -1
bool reltempoTrackVisible | int windownum ? -1
bool linenumbersVisible
setLinenumbersVisible | bool doit
bool smoothSequencerScrollingEnabled
void setSmoothSequencerScrollingEnabled | bool doit
bool showBarsInTimeline
void setShowBarsInTimeline | bool doit
bool useJackTransport
void setUseJackTransport | bool doit
bool isJackTimebaseMaster
void setIsJackTimebaseMaster | bool doit

bool doStopPlayingWhenSavingSong
setStopPlayingWhenSavingSong | bool doit
bool doSaveBackupWhilePlaying
setSaveBackupWhilePlaying | bool val
bool saveRecordedAudioFilesInBrowserPath
void setSaveRecordedAudioFilesInBrowserPath | bool val
bool doAutoBackups
setDoAutoBackups | bool doit
int autobackupIntervalInMinutes
setAutobackupIntervalInMinutes | int interval

# These functions are used to create the main menus. This is done in bin/menus.py.
addMenuMenu | const_char* name | const_char* command
goPreviousMenuLevel
addMenuItem | const_char* name | const_char* command
addCheckableMenuItem | const_char* name | const_char* command | int checkval ? 0
addMenuSeparator

setStatusbarText | const_char* text | int windownum ? -1

int getWebserverPort
eraseEstimatedVblank
dyn_t evalSchemeWithReturn | const_char* code
void evalScheme | const_char* code
evalPython | const_char* code

dyn_t getKeybindingsFromCommands # returns a hash table that looks like this: {"D ALT_R" : "a.transposeNote(-1)", ...}
const_char* getKeybindingFromCommand | const_char* keybindings_line

dyn_t getKeybindingsFromKeys # returns a hash table that looks like this: {"a.transposeNote(-1)": "D ALT_R", ...}
const_char* getKeybindingFromKeys | const_char* keys

reloadKeybindings
#setKeybinding | const_char* keyname | dyn_t qualifiers | const_char* funcname | dyn_t arguments
setKeybinding | const_char* keybinding | const_char* funcname | dyn_t arguments
removeKeybinding | const_char* keybinding | const_char* funcname | dyn_t arguments
void grabKeybinding | func_t* callback

bool isFullVersion

bool vstGuiIsAlwaysOnTop
setVstGuiAlwaysOnTop | bool doit

bool doModalWindows
setModalWindows | bool doit

bool doHighCpuOpenGlProtection
void setHighCpuOpenGlProtection | bool doit

bool doLockJuceWhenSwappingOpenGL
void setLockJuceWhenSwappingOpenGL | bool doit

bool useNativeFileRequesters
setUseNativeFileRequesters | bool doit

bool doAlwaysRunBuses
setAlwaysRunBuses | bool doit

printMixerTree
testCrashreporter
testCrashreporterInAudioThread
testErrorMessage
startAutotestingMode # Used when running the api_autotesting.scm script. Turns off user interaction.
stopAutotestingMode # Used when running the api_autotesting.scm script. Turns on user interaction.
bool isInAutotestingMode

# There is no playlist anymore.
#setPlaylistLength | int len
#setPlaylistBlock | int pos | int blocknum

int getFaustOptimizationLevel
setFaustOptimizationLevel | int level
const_char* getFaustGuiStyle
setFaustGuiStyle | const_char* style

int64_t getBlockLength | int blocknum ? -1 | int windownum ? -1 # returns in frames. Note that block tempo multiplication is not applied.
double getSongLength # returns seconds. Note that song tempo automation is ignored.
int64_t getSongLengthInFrames # Note: Return value may not be 100% frame accurate. (that's quite complicated to achieve with the block multiplier)
int getSampleRate

int getLogtypeHold
int getLogtypeLinear
Place getCursorPlace | int blocknum ? -1 | int windownum ? -1
int getCursorTrack | int windownum ? -1
int getHighestLegalPlaceDenominator

dyn_t getRatioFromString | const_char* s # For completenes in conjunction with quantitize and gui_ratio. Untested, probably works.
const_char* getStringFromRatio | dyn_t ratio # For completenes in conjunction with quantitize and gui_ratio. Untested, probably works.

const_char* toBase64 | const_char* s
const_char* fromBase64 | const_char* s
void msleep | int ms

bool releaseMode
const_char* getOsName # Returns "linux", "windows", or "macosx".
const_char* getProgramLog


# 'ms' can be any number, but the resolution of this timer is only 5ms.
# 5ms MINIMIUM, that is, there are realtime guarantees here since it runs in the main thread.
# If ms==0, callback is not called immediately. However, qApp::exec() might not have had time to run in the mean time. (same goes for any number actually, but especially 0)
void schedule | double ms | func_t* callback
removeSchedule | func_t* callback



#/*******************************************
#  File operations
#*******************************************/

const_char* getPath | const_char* path_string # careful, path_string should not contain non-ascii strings (even if the string is utf8). It probably won't work on windows.
const_char* getHomePath
const_char* getProgramPath
const_char* getPathString | const_char* w_path
const_char* appendFilePaths | const_char* w_path1 | const_char* w_path2
bool fileExists | const_char* w_path
int64_t openFileForReading | const_char* w_path # not implemented
int64_t openFileForWriting | const_char* w_path
bool closeFile | int64_t file
int writeToFile | int64_t file | const_char* string
bool fileAtEnd | int64_t disknum
const_char* readLineFromFile | int64_t file # not implemented

# read binary
int64_t openFileForBinaryReading | const_char* w_path
int readLe32FromFile | int64_t disknum
int64_t readLeU32FromFile | int64_t disknum
#int readBe32FromFile | int64_t disknum
int64_t readBeU32FromFile | int64_t disknum
int readLe16FromFile | int64_t disknum
# int readLeU16FromFile(int64_t disknum)
#int readBe16FromFile(int64_t disknum)
int readBeU16FromFile | int64_t disknum
int read8FromFile | int64_t disknum
int readU8FromFile | int64_t disknum




#/*******************************************
#  Instruments
#*******************************************/

bool doAudioBuzyLoop
void setAudioBuzyLoop | bool doit

bool autobypassEnabled
void setAutobypassEnabled | bool doit
int getAutoBypassDelay
void setAutobypassDelay | int ms

void selectInstrumentForTrack | int tracknum ? -1 # shows popup.
void requestReplaceInstrument | int64_t instrument_id | const_char* instrument_description | int64_t parentgui # Async. Returns immediately. Shows popup if instrument_description is empty string
void requestLoadInstrumentPreset | int64_t instrument_id | const_char* instrument_description | int64_t parentgui # Async. Returns immediately. shows file requester if instrument_description is empty string
void saveInstrumentPreset |dyn_t instrument_ids | int64_t parentgui

void replaceUseOfInstrument | int64_t old_instrument_id | int64_t new_instrument_id

void setInstrumentForTrack | int64_t instrument_id | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int64_t getInstrumentForTrack | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1 # Returns -2 if track has no instrument assigned. Returns -1 for other errors
void setInstrumentName | const_char* name | int64_t instrument_id
const_char* getInstrumentName | int64_t instrument_id
const_char* getInstrumentComment | int64_t instrument_id
void setInstrumentComment | const_char* comment | int64_t instrument_id
bool instrumentNameWasAutogenerated | int64_t instrument_id
bool hasPureData

bool hasNativeInstrumentGui | int64_t instrument_id
bool showInstrumentGui | int64_t instrument_id | bool show_instrument_window_if_not_visible ? false # Returns true if opening a native GUI.
bool hideInstrumentGui | int64_t instrument_id
bool instrumentGuiIsVisible | int64_t instrument_id
int64_t getCurrentInstrument
void setCurrentInstrument | int64_t instrument_id | bool show_instrument_window_if_not_visible ? false # Returns true if opening a native GUI.
showInstrumentInfo | dyn_t instrument_id_or_description | int64_t parentgui ? -2

int64_t getInstrumentDeletionGeneration
int64_t getAudioInstrumentDeletionGeneration


# audio
int64_t createAudioInstrument | const_char* type_name | const_char* plugin_name | const_char* name ? "" | float x ? 0 | float y ? 0 # returns instrument_id
int64_t createAudioInstrumentFromPreset | const_char* filename | const_char* name ? "" | float x ? 0 | float y ? 0
int64_t createAudioInstrumentFromDescription | const_char* instrument_description | const_char* name ? "" | float x ? 0 | float y ? 0 # returns instrument_id
int64_t cloneAudioInstrument | int64_t instrument_id | float x ? 0 | float y ? 0
dyn_t createNewInstrumentConf | float x ? 0 | float y ? 0 | bool connect_to_main_pipe ? false | bool do_autoconnect ? false | bool include_load_preset ? true | bool must_have_inputs ? false | bool must_have_outputs ? false | int64_t parentgui ? -2
void createInstrumentDescriptionPopupMenu | dyn_t instrument_conf

 # Returns vectors of base64 strings. (decode using fromBase64). 'path' must be in base64 format, or NULL, or "".
dyn_t getAllSinglePresetsInPath | const_char* path ? ""
dyn_t getAllMultiPresetsInPath | const_char* path ? ""

requestLoadPresetInstrumentDescription | int64_t parentgui | func_t* callback
bool instrumentPresetInClipboard
setInstrumentSample | int64_t instrument_id | const_char* filename
setRandomInstrumentSample | int64_t instrument_id | const_char* path ? "" # if path is empty, current path will be used.
setRandomSampleForAllSelectedInstruments
setInstrumentLoopData | int64_t instrument_id | int start | int length
void setInstrumentColor | const_char* colorname | int64_t instrument_id
const_char* getInstrumentColor | int64_t instrument_id

const_char* getInstrumentTypeName | int64_t instrument_id
const_char* getInstrumentPluginName | int64_t instrument_id

# effects
int getNumInstrumentEffects | int64_t instrument_id
bool instrumentIsImplicitlyMuted | int64_t instrument_id
const_char* getInstrumentEffectName | int effect_num | int64_t instrument_id
float getInstrumentEffect | int64_t instrument_id | const_char* effect_name       # Returns current value (stored, automation).
float getStoredInstrumentEffect | int64_t instrument_id | const_char* effect_name # Returns last set value (not automation).
setInstrumentEffect | int64_t instrument_id | const_char* effect_name | float value
undoInstrumentEffect | int64_t instrument_id | const_char* effect_name

const_char* getInstrumentEffectColor | int64_t instrument_id | const_char* effect_name

bool addAutomationToCurrentEditorTrack | int64_t instrument_id | const_char* effect_name
bool addAutomationToCurrentSequencerTrack | int64_t instrument_id | const_char* effect_name

void setInstrumentSolo | int64_t instrument_id | bool do_solo
void setInstrumentMute | int64_t instrument_id | bool do_mute
void setInstrumentBypass | int64_t instrument_id | bool do_bypass

#setInstrumentVolume | int instrument_id | float volume
#float getInstrumentVolume | int instrument_id

float getMinDb # used by meters and volume sliders
float getMaxDb # used by meters and volume sliders
float dbToGain | float db
float gainToDb | float gain

bool instrumentIsAudio | int64_t instrument_id

int getNumMIDIInstruments
int64_t getMIDIInstrumentId | int instrument_num

int getNumAudioInstruments                    # <-- Warning, unlike other num/id-types, instrument_num != instrument_id
int64_t getAudioInstrumentId | int instrument_num # <-- ..., so we have to call this function to get id from num. Note that instrument_num might change at any time, while instrument_id is always unique, and will never change value for an instrument.
int64_t getAudioBusId | int bus_num # return an instrument_id

bool instrumentIsBusDescendant | int64_t instrument_id
bool instrumentIsPermanent | int64_t instrument_id

float getInstrumentX | int64_t instrument_id
float getInstrumentY | int64_t instrument_id
setInstrumentPosition | float x | float y | int64_t instrument_id | bool auto_slot ? false
autopositionInstrument | int64_t instrument_id

# selection
dyn_t getSelectedInstruments # returns an array of instrument_id
int numSelectedInstruments
bool instrumentIsSelected | int64_t instrument_id


# connections

connectAudioInstrumentToMainPipe | int64_t instrument_id
bool autoconnectInstrument | int64_t instrument_id | float x | float y

int getNumInAudioConnections | int64_t instrument_id
int getNumOutAudioConnections | int64_t instrument_id

int64_t getAudioConnectionSourceInstrument | int inconnection | int64_t instrument_id
int64_t getAudioConnectionDestInstrument | int inconnection | int64_t instrument_id

undoMixerConnections

createAudioConnection | int64_t source_id | int64_t dest_id | float gain ? 1.0
createEventConnection | int64_t source_id | int64_t dest_id
void deleteAudioConnection | int64_t source_id | int64_t dest_id
void deleteEventConnection | int64_t source_id | int64_t dest_id
bool changeAudioConnections | dyn_t changes # 'changes' is an array of hash tables. The changes are applied in one go, except if a temporary state would create a recursive graph, then it will be applied in at least two steps. Example: [{type: "connect", source: 5, target: 6}, {type: "connect", source: 6, target: 7, gain: 0.2}, {type: "disconnect", source: 7, target: 8}]. Return true if the audio graph was changed.

bool hasAudioConnection | int64_t source_id | int64_t dest_id
bool hasEventConnection | int64_t source_id | int64_t dest_id

bool getConnectionEnabled | int64_t source_id | int64_t dest_id | bool show_error_if_not_connected ? true
void setConnectionEnabled | int64_t source_id | int64_t dest_id | bool is_enabled | bool redraw_mixer_strips ? true # Redraw all mixer strips since there might be more than one mixer strips window visible. Note: setting an event connection to false currently doesn't do anything.
void undoConnectionEnabled | int64_t source_id | int64_t dest_id

float getAudioConnectionGain | int64_t source_id | int64_t dest_id | bool show_error_if_not_connected ? true
void setAudioConnectionGain | int64_t source_id | int64_t dest_id | float gain | bool redraw_mixer_strips ? true # Redraw all mixer strips since there might be more than one mixer strips window visible.
void undoAudioConnectionGain | int64_t source_id | int64_t dest_id

int getNumInEventConnections | int64_t instrument_id
int getNumOutEventConnections | int64_t instrument_id

int64_t getEventConnectionSourceInstrument | int inconnection | int64_t instrument_id
int64_t getEventConnectionDestInstrument | int inconnection | int64_t instrument_id

int getNumInputChannels | int64_t instrument_id
int getNumOutputChannels | int64_t instrument_id

deleteInstrument | int64_t instrument_id # Note that undo is not created if deleting a MIDI instrument.
bool instrumentIsOpen | int64_t instrument_id # returns false if the instrument has been deleted.
bool instrumentIsOpenAndAudio | int64_t instrument_id # returns false if the instrument has been deleted or instrument is not an audio instrument.

const_char* getSampleBookmarks | int num
void setSampleBookmarks | int num | const_char* path


# midi
bool doSplitIntoMonophonicTracksAfterRecordingFromMidi
void setSplitIntoMonophonicTracksAfterRecordingFromMidi | bool doit

bool doUseTrackChannelForMidiInput
void setUseTrackChannelForMidiInput | bool doit

int64_t createMIDIInstrument | const_char* name
setInstrumentData | int64_t instrument_id | const_char* key | const_char* value
const_char* getInstrumentData | int64_t instrument_id | const_char* key

midi_resetAllControllers
midi_localKeyboardOn
midi_localKeyboardOff
midi_allNotesOff
midi_allSoundsOff
midi_recordAccurately | bool accurately
midi_alwaysRecordVelocity | bool doit
midi_setInputPort

# play note
int playNote | float pitch | float velocity | float pan | int midi_channel | int64_t instrument_id # returns a playnote_id
changeNotePitch | float pitch | int playnote_id | int midi_channel | int64_t instrument_id # todo, change name, for instance to changePlayingNotePitch.
stopNote | int playnote_id | int midi_channel | int64_t instrument_id

# effect monitors. 'func' is not called immediately when an effect changes value, but instead checked at regular intervals (15ms).
# Note that the callback might be called as often as each 15ms, so it should preferably not allocate memory or do heavy operations.
int64_t addEffectMonitor | const_char* effect_name | int64_t instrument_id | bool monitor_stored | bool monitor_automation | func_t* func
removeEffectMonitor | int64_t effect_monitor_id

# mixer strips
redrawMixerStrips | bool immediately ? true # Must be called when current instrument changes.
remakeMixerStrips | int64_t instrument_id ? -1 # Must be called in case mixer connections has changed, instrument has been added, or instrument has been removed. (if instrument_id==-1, all instruments are remade. if instrument_id==-2, no instruments are remade (only order may be updated))
bool hasWideInstrumentStrip | int64_t instrument_id
void setWideInstrumentStrip | int64_t instrument_id | bool is_wide
void setMixerStripCommentsVisible | bool val
bool mixerStripCommentsVisible



#/*******************************************
# sound plugin registry
#/*******************************************
int getSoundPluginRegistryGeneration # Generation is increased before each time getSoundPluginRegistry will return a different result than the last time. (first generation is 0)
dyn_t getSoundPluginRegistry | bool only_normal_and_containers ? false # returns an array of soundpluginregistry entries
dyn_t populatePluginContainer | dyn_t entry # entry must be a container entry. Returns soundpluginregistry entries for the container.
void clearSoundPluginRegistry



#/*******************************************
#  Requester
#*******************************************/

setDefaultColors1
setDefaultColors2
configSystemFont
configFonts  | int windownum ? -1
setDefaultEditorFont
setDefaultSystemFont
void setEditorFont | const_char* fontdescr
void setSystemFont | const_char* fontdescr
const_char* getEditorFont
const_char* getSystemFont

configWindow | int windownum ? -1
configBlock | int windownum ? -1
configVST | int windownum ? -1

const_char* getLoadFilename | const_char* text | const_char* filetypes | const_char* dir ? "" | const_char* type ? "" # sync. See gui_fileRequester for async version.
const_char* getSaveFilename | const_char* text | const_char* filetypes | const_char* dir ? "" | const_char* type ? "" # sync. See gui_fileRequester for async version.
openRequester | const_char* text | int width ? 50 | int height ? 20 # Be very careful. closeRequester must be put inside a finally clause. If not, keyboard may stop working for the whole program.
closeRequester # Safe to call even if openRequester had not been called. Then it's just a dummy operation.
bool safeToCallCloseRequester # not reall necessary. Hack caused by the requesters being non-async.
int requestInteger | const_char* text | int min | int max | bool standaline ? false | const_char* default_value ? ""
float requestFloat | const_char* text | float min | float max | bool standaline ? false | const_char* default_value ? ""
const_char* requestString | const_char* text | bool standalone ? false | const_char* default_value ? ""

# Submenues can be created by using "[submenu start]<name>" and "[submenu end]"
# On/off entries can be created by prepending entries with "[check on]" or "[check off]".
# Disabled entries can be prepended with "[disabled]"
# Separator entries can be created by using "-----"
# In scheme, the function "popup-menu" (defined in common2.scm) is a higher level interfaces to popupMenu.
int simplePopupMenu | const_char* texts # non-async. 'texts' is a string where each menu entry is separated by "%".
void popupMenu | dyn_t menu_entry_texts | func_t* callback

void colorDialog | const_char* initial_color | int64_t parentgui | func_t* callback
const_char* requestMidiPort

# Note: showMessage blocks the normal execution, which pauses some graphic updates and other things.
# It's usually better to use 'show-async-message' or 'ra:addMessage' instead. 'show-async-message' is defined in gui.scm and has this signature:
#  (delafina (show-async-message :parentgui -2
#                                   :text ""
#                                   :buttons '("OK")
#                                   :is-modal #t
#                                   :callback #f)
const_char* showMessage | const_char* text | dyn_t buttons ? g_uninitialized_dyn
const_char* showMessage2 | const_char* text
void showAsyncMessage | const_char* text # Calls the 'show-async-message' scheme function.

# Adds message to THE message window in the program (which is shown if it is not visible). Returns immediately.
void addMessage | const_char* text

showWarning | const_char* text # Shows assertion reporter. 3rd party code must not call this function. (use showMessage, addMessage, or ra:show-async-message instead)
showError | const_char* text # Shows assertion reporter. 3rd party code must not call this function. (use showMessage, addMessage, or ra:show-async-message instead)
openProgressWindow | const_char* message # closeProgressWindow should be put inside a finally clause when calling openProgressWindow.
showProgressWindowMessage | const_char* message
closeProgressWindow
showHomeHelpWindow
showChanceHelpWindow
showVelocityHelpWindow
showFXHelpWindow
showSwingHelpWindow
showMixerHelpWindow
showKeybindingsHelpWindow


#/************************************************************************
#  Mouse (including functions to get positions of graphical objects, etc.)
#************************************************************************/

cancelCurrentNode
cancelIndicatorNode

Place getPlaceFromY | float y | int blocknum ? -1 | int windownum ? -1
Place getPlaceInGridFromY | float y | int blocknum ? -1 | int windownum ? -1
Place getNextPlaceInGridFromY | float y | int blocknum ? -1 | int windownum ? -1    
float getHalfOfNodeWidth
float getTopVisibleY | int blocknum ? -1 | int windownum ? -1
float getBotVisibleY | int blocknum ? -1 | int windownum ? -1
setNoMouseTrack
setMouseTrackToReltempo
setMouseTrack | int tracknum

# editor
float getEditorX1 | int windownum ? -1
float getEditorX2 | int windownum ? -1
float getEditorY1 | int windownum ? -1 
float getEditorY2 | int windownum ? -1

# block
float getBlockHeaderY2 | int blocknum ? -1 | int windownum ? -1

# track
float getTrackX1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackY1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackX2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackY2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

float getTrackPianorollX1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackPianorollY1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackPianorollX2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackPianorollY2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

float getTrackNotesX1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackNotesY1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackNotesX2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackNotesY2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

float getTrackFxX1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackFxY1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackFxX2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackFxY2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

float getCenttextX1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getCenttextY1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getCenttextX2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getCenttextY2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

float getChancetextX1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getChancetextY1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getChancetextX2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getChancetextY2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

float getSwingtextX1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getSwingtextY1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getSwingtextX2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getSwingtextY2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

float getVelocitytextX1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getVelocitytextY1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getVelocitytextX2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getVelocitytextY2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

float getFxtextX1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getFxtextY1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getFxtextX2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getFxtextY2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

int getFxtextEffectNumFromX | float x | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

int getLeftmostTrackNum
int getRelTempoTrackNum
int getTempoTrackNum
int getLPBTrackNum
int getSignatureTrackNum
int getSwingTrackNum
int getTempoColorTrackNum
int getLinenumTrackNum

#reltemposlider
float getReltempoSliderX1
float getReltempoSliderY1
float getReltempoSliderX2
float getReltempoSliderY2

double getReltempo | int blocknum ? -1 | int windownum ? -1
undoReltempo
setReltempo | double reltempo
float getMinReltempo
float getMaxReltempo

float getTrackSliderX1
float getTrackSliderY1
float getTrackSliderX2
float getTrackSliderY2

float getTrackSliderScrollerX1 | int blocknum ? -1 | int windownum ? -1
float getTrackSliderScrollerY1
float getTrackSliderScrollerX2 | int blocknum ? -1 | int windownum ? -1
float getTrackSliderScrollerY2

setTrackSliderIsMoving | bool is_moving | int windownum ? -1


float getEditorScrollbarX1
float getEditorScrollbarY1
float getEditorScrollbarX2
float getEditorScrollbarY2

float getEditorScrollbarScrollerX1
float getEditorScrollbarScrollerY1 | int blocknum ? -1 | int windownum ? -1
float getEditorScrollbarScrollerX2
float getEditorScrollbarScrollerY2 | int blocknum ? -1 | int windownum ? -1

float getTrackSliderPos | int blocknum ? -1 | int windownum ? -1
void setTrackSliderPos | float pos | int blocknum ? -1 | int windownum ? -1


setEditorScrollbarIsMoving | bool is_moving | int windownum ? -1

# track panning on/off
float getTrackPanOnOffX1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackPanOnOffY1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackPanOnOffX2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackPanOnOffY2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
bool getTrackPanOnOff | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
undoTrackPanOnOff | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setTrackPanOnOff | bool onoff | int tracknum ? -1 | int blocknum ?  -1 | int windownum ? -1


# track volumening on/off
float getTrackVolumeOnOffX1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackVolumeOnOffY1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackVolumeOnOffX2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackVolumeOnOffY2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
bool getTrackVolumeOnOff | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
undoTrackVolumeOnOff | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setTrackVolumeOnOff | bool onoff | int tracknum ? -1 | int blocknum ?  -1 | int windownum ? -1


# track panning sliders
float getTrackPanSliderX1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackPanSliderY1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackPanSliderX2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackPanSliderY2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackPan | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
undoTrackPan | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
#setTrackPan | float pan | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

# track volumening sliders
float getTrackVolumeSliderX1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackVolumeSliderY1 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackVolumeSliderX2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackVolumeSliderY2 | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getTrackVolume | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
undoTrackVolume | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
#setTrackVolume | float volume | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1


#temponodes
int getTemponodeAreaX1
int getTemponodeAreaY1
int getTemponodeAreaX2
int getTemponodeAreaY2

float getTemponodeMax | int blocknum ? -1 | int windownum ? -1

float getTemponodeX | int num
float getTemponodeY | int num
Place getTemponodePlace | int num | int blocknum ? -1 | int windownum ? -1
float getTemponodeValue | int num | int blocknum ? -1 | int windownum ? -1

setCurrentTemponode | int num | int blocknum ? -1
setIndicatorTemponode | int num | int blocknum ? -1


#pianoroll (gfx)
int getPioanorollLowKey | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int getPioanorollHighKey | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getPianonoteX1 | int pianonotenum | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getPianonoteY1 | int pianonotenum | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getPianonoteX2 | int pianonotenum | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getPianonoteY2 | int pianonotenum | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getPianonoteValue | int pianonotenum | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int getPianonoteLogtype | int pianonotenum | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setPianonoteLogtype | int logtype | int pianonotenum | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int getNumPianonotes | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setCurrentPianonote | int num | dyn_t note | int tracknum
cancelCurrentPianonote
addPianonotePitch | float value | Place place | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

void showPianorollEraser | float pitch1 | float pitch2 | Place place1 | Place place2 | int tracknum | int blocknum ? -1 | int windownum ? -1
void hidePianorollEraser | int windownum ? -1

dyn_t movePianonote | int pianonotenum | float value | Place place | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1 # returns the notenum. It might change if moved past another.
dyn_t movePianonoteStart | int pianonotenum | float value | Place place | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1 # returns the notenum. It might change if moved past another.
dyn_t movePianonoteEnd | int pianonotenum | float value | Place place | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1 # returns the notenum. It might change if moved past another.
dyn_t addPianonote | float value | Place place | Place endplace | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1 # returns notenum, or -1 if note couldnt be made
deletePianonote | int pianonotenum | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

int placetest | Place dasplacevar | int windownum ? -1
Place placetest2 | int a | int b | int c

#dyn_t testsomething | dyn_t arg

#pitchnums (gfx)
int getNumPitchnums | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getPitchnumX1 | int pitchnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getPitchnumY1 | int pitchnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getPitchnumX2 | int pitchnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getPitchnumY2 | int pitchnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getPitchnumX | int pitchnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getPitchnumY | int pitchnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getPitchnumValue | int pitchnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
#Place getPitchStart | int pitchnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
#int getPitchLogtype | int pitchnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1 
setCurrentPitchnum | int num | int tracknum ? -1 | int blocknum ? -1
setIndicatorPitchnum | int num | int tracknum ? -1 | int blocknum ? -1
int setPitchnum | int num | float value | Place place | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1 # if place is 'same-place, a new place will not be set. Returns new pitchnum.
deletePitchnum | int pitchnum | int tracknum ? -1 | int blocknum ? -1
int addPitchnum | float value | Place place | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int addPitchnumF | float value | float place | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1 # Returns the node number, or -1 if a node was not created.
setPitchnumLogtype | int logtype | int pitchnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

bool portamentoEnabled | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setNoteEndPitch | float value | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
enablePortamento | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
disablePortamento | dyn_t note | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

#subtracks
int getNumSubtracks | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getSubtrackX1 | int subtracknum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getSubtrackX2 | int subtracknum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1


#fxs
int getFx | const_char* fx_name | int tracknum ? -1 | int64_t instrument_id ? -1 | int blocknum ? -1 | int windownum ? -1
int addFx | float value | Place place | const_char* fx_name | int tracknum ? -1 | int64_t instrument_id ? -1 | int blocknum ? -1 | int windownum ? -1
int addFxF | float value | float place | const_char* fx_name | int tracknum ? -1 | int64_t instrument_id ? -1 | int blocknum ? -1 | int windownum ? -1
int addFxnode | float value | Place place | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int addFxnodeF | float value | float floatplace | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setFxnode | int fxnodenum | float value | Place place | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setFxnodeF | int fxnodenum | float value | float place | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setFxnodeLogtype | int logtype | int fxnodenum | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
deleteFxnode | int fxnodenum | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
Place getFxnodePlace | int fxnodenum | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getFxnodeValue | int num | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int getFxnodeLogtype | int num | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1


#fxs, gui/gfx/mouse
requestFX | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
#requestFXMousePos | int windownum ? -1 # doesn't work. In scheme, use (<ra> :request-fx current-track-num ) instead.
float getFxnodeX | int num | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getFxnodeY | int num | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
const_char* getFxName | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int64_t getFxInstrument | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
const_char* getFxString | int fxnodenum | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int getNumFxs | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
int getNumFxnodes | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getFxMinValue | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
float getFxMaxValue | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setCurrentFxnode | int fxnodenum | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setIndicatorFxnode | int fxnodenum | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
setNoMouseFx | int blocknum ? -1 | int windownum ? -1
setMouseFx | int fxnum | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
undoFxs | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

#fxs, clipboard
Place getFxrangenodePlace | int fxnodenum | int fxnum | int rangetracknum
float getFxrangenodeValue | int num | int fxnum | int rangetracknum
int getFxrangenodeLogtype | int num | int fxnum | int rangetracknum
const_char* getFxrangeName | int fxnum | int rangetracknum
int getNumFxrangenodes | int fxnum | int rangetracknum
int getNumFxsInRange | int rangetracknum
clearTrackFX | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1


#track widths
float getTrackWidth | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1
undoTrackWidth
setTrackWidth | float new_width | int tracknum ? -1 | int blocknum ? -1 | int windownum ? -1

#modifier keys
bool controlPressed # linux/windows: Ctrl, osx: Cmd
bool control2Pressed # linux/windows: Meta, osx: Alt

bool shiftPressed
bool metaPressed # osx: Ctrl
bool altPressed

#mouse pointer
setNormalMousePointer | int64_t guinum
setPointingMousePointer | int64_t guinum
setOpenHandMousePointer | int64_t guinum
setClosedHandMousePointer | int64_t guinum
setBlankMousePointer | int64_t guinum
setDiagonalResizeMousePointer | int64_t guinum
setVerticalResizeMousePointer | int64_t guinum
setHorizontalResizeMousePointer | int64_t guinum
setHorizontalSplitMousePointer | int64_t guinum
moveMousePointer | float x | float y | int windownum ? -1
float getMousePointerX | int windownum ? -1 # Relative to editor
float getMousePointerY | int windownum ? -1 # Relative to editor
float getGlobalMousePointerX
float getGlobalMousePointerY


#/*******************************************
#  Seqtracks
#*******************************************/

# sequencer
float getSequencerX1
float getSequencerX2
float getSequencerY1
float getSequencerY2
void undoSequencerAutomation
void undoSequencer

int64_t getSequencerSongLengthInFrames
int64_t getSequencerVisibleStartTime
int64_t getSequencerVisibleEndTime
void setSequencerVisibleStartTime | int64_t value
void setSequencerVisibleEndTime | int64_t value
void setSequencerGridType | int grid_type

void setSequencerSelectionRectangle | float x1 | float y1 | float x2 | float y2
void unsetSequencerSelectionRectangle

# sequencer navigator
float getSeqnavX1
float getSeqnavX2
float getSeqnavY1
float getSeqnavY2
float getSeqnavLeftSizeHandleX1
float getSeqnavLeftSizeHandleX2
float getSeqnavLeftSizeHandleY1
float getSeqnavLeftSizeHandleY2
float getSeqnavRightSizeHandleX1
float getSeqnavRightSizeHandleX2
float getSeqnavRightSizeHandleY1
float getSeqnavRightSizeHandleY2

# sequencer track automation
int addSeqAutomation | int64_t time1 | float value1 | int64_t time2 | float value2 | int effect_num | int64_t instrument_id | int seqtracknum
replaceAllSeqAutomation | int64_t old_instrument | int64_t new_instrument
int getNumSeqAutomations | int seqtracknum
int64_t getSeqAutomationInstrumentId | int automationnum | int seqtracknum
int getSeqAutomationEffectNum | int automationnum | int seqtracknum
float getSeqAutomationValue | int nodenum | int automationnum | int seqtracknum
int64_t getSeqAutomationTime | int nodenum | int automationnum | int seqtracknum
int getSeqAutomationLogtype | int nodenum | int automationnum | int seqtracknum
int getNumSeqAutomationNodes | int automationnum | int seqtracknum
int addSeqAutomationNode | int64_t time | float value | int logtype | int automationnum | int seqtracknum
void deleteSeqAutomationNode | int nodenum | int automationnum | int seqtracknum
void setCurrSeqAutomationNode | int nodenum | int automationnum | int seqtracknum # Gfx. Paint filled node.
cancelCurrSeqAutomationNode | int automationnum | int seqtracknum
void setCurrSeqAutomation | int automationnum | int seqtracknum # gfx. Paints the nodes.
cancelCurrSeqAutomation
int getCurrSeqAutomationSeqtrack
int getCurrSeqAutomation
void setSeqAutomationNode | int64_t time | float value | int logtype | int nodenum | int automationnum | int seqtracknum
float getSeqAutomationNodeX | int nodenum | int automationnum | int seqtracknum
float getSeqAutomationNodeY | int nodenum | int automationnum | int seqtracknum

# song tempo automation
void undoSeqtempo

float getSeqtempoAreaX1
float getSeqtempoAreaY1
float getSeqtempoAreaX2
float getSeqtempoAreaY2
float getSeqtemponodeX | int nodenum
float getSeqtemponodeY | int nodenum
void setSeqtempoVisible | bool visible
bool seqtempoVisible

double getSeqtempoValue | int nodenum
double getSeqtempoAbstime | int nodenum
int getSeqtempoLogtype | int nodenum
int getNumSeqtemponodes
int addSeqtemponode | double abstime | double value | int logtype
void deleteSeqtemponode | int nodenum
void setCurrSeqtemponode | int nodenum
void setSeqtemponode | double abstime | double value | int logtype | int nodenum
void setSeqtempoLength | double end_time | bool do_shrink ? false
double getSeqtempoLength
int64_t getSeqtempoAbsabstime | double abstime
double getSeqtempoMaxTempo
void setSeqtempoMaxTempo | double max_tempo

float getSeqtimelineAreaX1
float getSeqtimelineAreaY1
float getSeqtimelineAreaX2
float getSeqtimelineAreaY2

void setSeqlooping | bool do_loop
bool isSeqlooping
void setSeqloopingStart | int64_t start
int64_t getSeqloopingStart
void setSeqloopingEnd | int64_t end
int64_t getSeqloopingEnd


# seqtracks
void appendSeqtrack
void insertSeqtrack | int pos ? -1
void deleteSeqtrack | int seqtracknum ? -1
int getNumSelectedSeqblocks
void selectSeqtrack | int seqtracknum
int getCurrSeqtrack
int getNumSeqtracks

float getSeqtrackX1 | int seqtracknum
float getSeqtrackX2 | int seqtracknum
float getSeqtrackY1 | int seqtracknum
float getSeqtrackY2 | int seqtracknum
int getSeqtrackFromY | int y

int64_t getSeqGriddedTime | int64_t pos | int seqtracknum | const_char* grid_type
int64_t findClosestSeqtrackBarStart | int seqtracknum | int64_t pos
int64_t findClosestSeqtrackBeatStart | int seqtracknum | int64_t pos
int64_t findClosestSeqtrackLineStart | int seqtracknum | int64_t pos

const_char* getSeqBlockGridType
void setSeqBlockGridType | const_char* type
const_char* getSeqAutomationGridType
void setSeqAutomationGridType | const_char* type
const_char* getSeqTempoGridType
void setSeqTempoGridType | const_char* type
const_char* getSeqLoopGridType
void setSeqLoopGridType | const_char* type

void insertSilenceToSeqtrack | int seqtracknum | int64_t pos | int64_t duration

# seqblocks
int createSeqblock | int seqtracknum | int blocknum | int64_t pos | int64_t endpos ? -1
int createGfxGfxSeqblock | int seqtracknum | int blocknum | int64_t pos | int64_t endpos ? -1

void setCurrSeqblock | int seqblocknum | int seqtracknum # FIX: Change function name. It returns the seqblock currently under mouse cursor.
void cancelCurrSeqblock # FIX: Change function name.


int getNumSeqblocks | int seqtracknum
int getNumGfxGfxSeqblocks | int seqtracknum
int64_t getSeqblockStartTime | int seqblocknum | int seqtracknum
int64_t getSeqblockEndTime | int seqblocknum | int seqtracknum
int64_t getSeqblockGfxStartTime | int seqblocknum | int seqtracknum
int64_t getSeqblockGfxEndTime | int seqblocknum | int seqtracknum

# seqblock area
float getSeqblockX1 | int seqblocknum | int seqtracknum
float getSeqblockX2 | int seqblocknum | int seqtracknum
float getSeqblockY1 | int seqblocknum | int seqtracknum
float getSeqblockY2 | int seqblocknum | int seqtracknum

# seqblock left stretch multiplier area
float getSeqblockLeftStretchX1 | int seqblocknum | int seqtracknum
float getSeqblockLeftStretchY1 | int seqblocknum | int seqtracknum
float getSeqblockLeftStretchX2 | int seqblocknum | int seqtracknum
float getSeqblockLeftStretchY2 | int seqblocknum | int seqtracknum

# seqblock right stretch multiplier area
float getSeqblockRightStretchX1 | int seqblocknum | int seqtracknum
float getSeqblockRightStretchY1 | int seqblocknum | int seqtracknum
float getSeqblockRightStretchX2 | int seqblocknum | int seqtracknum
float getSeqblockRightStretchY2 | int seqblocknum | int seqtracknum

# Seqblock = Operate on both gfx and audio
# SeqblockGfx = Only operate on gfx
# SeqblockGfxGfx = GfxGfx seqblocks only show gfx. Not used for audio. Used when moving several seqblocks (the half-transparent orange seqblocks).
void positionSeqblock | int64_t start_abstime | int64_t end_abstime | int seqblocknum | int seqtracknum # start/end_abstime can be -1
void positionSeqblockGfx | int64_t start_abstime | int64_t end_abstime | int seqblocknum | int seqtracknum # start/end_abstime can be -1

void moveSeqblock | int64_t time | int seqblocknum | int seqtracknum | int new_seqtracknum ? -1 # Changes both graphics and sound
void moveSeqblockGfx | int64_t time | int seqblocknum | int seqtracknum | int new_seqtracknum ? -1 # Only changes graphics. This one sets seqtrack->seqblock->gfx_time
#void moveSeqblockGfxGfx | int seqblocknum | int64_t abstime | int seqtracknum | int new_seqtracknum ? -1 # Only changes graphics. This one sets seqtrack->gfx_seqblock->time. (not used. Instead, just delete and create new ones at the new position.)
void deleteSeqblock | int seqblocknum | int seqtracknum
void deleteGfxGfxSeqblock | int seqblocknum | int seqtracknum
int getSeqblockBlocknum | int seqblocknum | int seqtracknum
void selectSeqblock | bool is_selected | int seqblocknum | int seqtracknum ? -1
bool isSeqblockSelected | int seqblocknum | int seqtracknum ? -1
bool isSeqblockTrackEnabled | int tracknum | int seqblocknum | int seqtracknum ? -1
void setSeqblockTrackEnabled | bool is_enabled | int tracknum | int seqblocknum | int seqtracknum ? -1

# Stretch=1.0: No tempo change.
# Stretch=0.5: Double tempo.
# Stretch=2.0: Half tempo.
# To set stretch, use positionSeqblock.
double getSeqblockStretch | int seqblocknum | int seqtracknum
double getSeqblockStretchGfx | int seqblocknum | int seqtracknum

void cutSelectedSeqblocks
void pasteSeqblocks | int seqtracknum ? -1 | int64_t time ? -1
void copySelectedSeqblocks
void deleteSelectedSeqblocks


#/*******************************************
#  GUI
#*******************************************/

# The 'color' format can either be a html string, for instance "#80ff0000" is red with 0x80 alpha, and "red" is just red. 
# But it can also be the name of a configurable color. See $HOME/.radium/colors.

# A parentgui can be a normal gui, or one of these:
# -1 = we use the main window as parent.
# -2 = we use the current window. (this widget does not have to be created by one of the gui_* functions)
# -3 = no parent. (NULL)
# -4 = widget under cursor

int gui_getSystemFontheight

gui_toolTip | const_char* text

const_char* gui_mixColors | const_char* color1 | const_char* color2 | float how_much_color1
float gui_textWidth | const_char* text

int64_t gui_ui | const_char* filename # Note that the toplevel widget in the ui file should be a widget, and not a dialog. (got dialogs to work, but they are a bit tricky, better to use widget)

int gui_numOpenGuis # Useful to see if there is a GUI leakage. Guis are not automatically garbage collected and must be closed either explicitly, or implictly by closing the parent.
int64_t gui_random # Returns a random gui. Used for testing.

int64_t gui_child | int64_t guinum | const_char* childname
void gui_addRealtimeCallback | int64_t guinum | func_t* callback # For instance, to get a callback for all characters typed into a QLineEdit.
void gui_addCallback | int64_t guinum | func_t* callback        

# 'func' takes one argument: 'radium-runs-custom-exec', which is a boolean denoting whether radium currently runs a custom Qt::exec().
# If this argument is true, be careful about calling <ra> or <gui> functions. This can be difficult though, and the callback won't be called again if 'radium-runs-custom-exec' is true.
# Something is most likely broken if 'radium-runs-custom-exec' is true though, so usually it's best to ignore this variable. If the destructor operations can be delayed a little bit,
# this can be scheduled to run later using (<ra> :schedule 1).
void gui_addDeletedCallback | int64_t guinum | func_t* func # 'func' is called right after gui is closed, and when gui is deleted. Several callbacks can be added. (also see gui_closeCallback)

void gui_addMouseCallback | int64_t guinum | func_t* func
void gui_addKeyCallback | int64_t guinum | func_t* func
void gui_addDoubleClickCallback | int64_t guinum | func_t* func

# 'func' is called before gui is closed. If the callback returns #f, we don't close and delete the gui. Only one callback can be added. (also see gui_addDeletedCallback).
#
# Similar to the deleted callback, 'func' takes one argument. (see gui_addDeletedCallback).
# Preferably, 'func' should only return #t or #f if 'radium-runs-custom-exec' is true.
# In addition, the callback can also safely call (<gui> :hide) even if 'radium-runs-custom-exec' is true.
#
# Note that the close callback is not always called (dialogs don't call it for instance).
# It should only be used to denote if the gui should be hidden instead of deleted, or if asking "are you sure?", etc.
# If not, addDeletedCallback should be used instead.
void gui_addCloseCallback | int64_t guinum | func_t* func

void gui_addResizeCallback | int64_t guinum | func_t* func
void gui_addPaintCallback | int64_t guinum | func_t* func

void gui_updateRecursively | int64_t guinum
void gui_update | int64_t guinum | int x1 ? -1 | int y1 ? -1 | int x2 ? -1 | int y2 ? -1

int64_t gui_verticalAudioMeter | int64_t instrument_id
gui_addAudioMeterPeakCallback | int64_t guinum | func_t* func
gui_resetAudioMeterPeak | int64_t guinum

int64_t gui_widget | int width ? -1 | int height ? -1
int64_t gui_popup | int width ? -1 | int height ? -1
int64_t gui_button | const_char* text
int64_t gui_checkbox | const_char* text | bool is_checked | bool radium_style ? false
int64_t gui_radiobutton | const_char* text | bool is_checked
int64_t gui_horizontalIntSlider | const_char* text | int min | int curr | int max
int64_t gui_horizontalSlider    | const_char* text | double min | double curr | double max
int64_t gui_verticalIntSlider   | const_char* text | int min | int curr | int max
int64_t gui_verticalSlider      | const_char* text | double min | double curr | double max

int64_t gui_verticalLayout
int64_t gui_horizontalLayout
int64_t gui_tableLayout | int num_columns
int64_t gui_flowLayout
int64_t gui_group | const_char* title
int64_t gui_scrollArea | bool scroll_horizontal ? true | bool scroll_vertical ? true
int64_t gui_verticalScroll
int64_t gui_horizontalScroll
int64_t gui_line | const_char* content # Note, to work around a bug in Qt, the callback will not be called if the line contains the same value as last time when pressing return.
int64_t gui_textEdit | const_char* content | bool read_only ? false
int64_t gui_ratio | dyn_t ratio | bool wheelMainlyChangesNumerator ? true | bool wheelDecrasesDenominatorIfNumeratorIsOne ? true  # Note, to work around a bug in Qt, the callback will not be called if the line contains the same value as last time when pressing return.
int64_t gui_text | const_char* text | const_char* color ? ""  | bool align_top ? false | bool align_left ? true # 'text' can contain html.
int64_t gui_intText | int min | int curr | int max
int64_t gui_floatText | double min | double curr | double max | int num_decimals ? 2 | double step_interval ? -1
int64_t gui_web | const_char* url # url can be http url (url must start with "http"), local file with relative path (relative to the radium executable), or local file with absolute path. (Note that absolute paths usually don't work under windows if it contains non-ascii characters.)
void gui_setUrl | int64_t gui | const_char* url # Only works if gui is a web.
void openExternalWebBrowser | const_char* stringurl # accepts same type of arguments as gui_web
int64_t gui_fileRequester | const_char* header_text | const_char* dir ? "" | const_char* filetypename ? "" | const_char* postfixes ? "" | bool for_loading ? true
int64_t gui_fontRequester | const_char* fontdescr ? ""

# tabs
int64_t gui_tabs | int tab_pos ? 0 # 0=north,1=south,2=west,3=east
int64_t gui_getTabBar | int64_t tabs_guinum # Returns the tab bar. Can be used to paint custom graphics and so forth.
void gui_removeTab | int64_t tabs_guinum | int pos
int gui_addTab | int64_t tabs_guinum | const_char* name | int64_t tab_guinum | int pos ? -1 # if pos==-1, tab is appended. Function returns pos the tab was inserted at.
int gui_currentTab | int64_t tabs_guinum
void gui_setCurrentTab | int64_t tabs_guinum | int pos
int gui_getTabPos | int64_t tabs_guinum | int64_t tab_guinum # returns negative number if not found (-2 if not included, -1 if error)
int gui_numTabs | int64_t tabs_guinum
const_char* gui_tabName | int64_t tabs_guinum | int pos ? -1

# splitter
int64_t gui_verticalSplitter | bool childrenCollappsible ? false
int64_t gui_horizontalSplitter | bool childrenCollappsible ? false
int64_t gui_getSplitterHandle | int64_t splitter_guinum | int pos

# rubber band. Doesn't work. Use gui-rubber-band from gui.scm instead.
# int64_t gui_rubberBand | float opacity ? 0.0

# table
int64_t gui_table | dyn_t header_names
#int64_t gui_addTableCell | int64_t table_guinum | dyn_t cell | int x | int y # cell can either be a guinum or a string. Returns gui num of the cell.
int64_t gui_addTableGuiCell    | int64_t table_guinum | int64_t cell_gui_num | int x | int y | bool enabled ? true
int64_t gui_addTableStringCell | int64_t table_guinum | const_char* string | int x | int y | bool enabled ? true
int64_t gui_addTableIntCell    | int64_t table_guinum | int64_t num | int x | int y | bool enabled ? true
int64_t gui_addTableFloatCell  | int64_t table_guinum | double num | int x | int y | bool enabled ? true

gui_addTableRows | int64_t table_guinum | int pos | int how_many # how_many can be negative
int gui_getNumTableRows | int64_t table_guinum
int gui_currTableRow | int64_t table_guinum
int gui_getTableRowNum | int64_t table_guinum | int64_t cell_guinum # returns -1 if not found. (no error message if not found)
gui_enableTableSorting | int64_t table_guinum | bool do_sort
gui_sortTableBy | int64_t table_guinum | int x | bool sort_ascending # 'x' is column number.
gui_stretchTable | int64_t table_guinum | int x | bool do_stretch | int size

# various operations on guis

const_char* gui_className | int64_t guinum # Returns Qt classname. Should not be used for dispatching since api_gui.cpp may change the underlying class. The function should probably only be used debugging and error messages.

void gui_setWindowTitle | int64_t guinum | const_char* value
void gui_setToolTip | int64_t guinum | const_char* value
void gui_setText | int64_t guinum | const_char* value
void gui_setValue | int64_t guinum | dyn_t value
dyn_t gui_getValue | int64_t guinum
void gui_add | int64_t parentnum | int64_t childnum | int x1_or_stretch ? -1 | int y1 ? -1 | int x2 ? -1 | int y2 ? -1
void gui_replace | int64_t parentnum | int64_t oldchildnum | int64_t newchildnum

bool gui_isVisible | int64_t guinum
gui_show | int64_t guinum
gui_hide | int64_t guinum
gui_close | int64_t guinum
bool gui_isOpen | int64_t guinum

# Sets the parent window for a window.
#
# 'gui' must be a toplevel window
#
# Note that (<gui> :add parent child) is not the same as (<gui> :setParent child parent).
# This function is just used to know which window the child should be on top of. However, both forms cause the child to
# be automatically deleted when the parent is deleted.
#
# Beware that if a parent closes, all children are closed as well, and letting the closeCallback return false doesn't prevent that.
# (doesn't happen if parentgui is -1, -2, or -3)
#
# returns true if parent was changed
bool gui_setParent | int64_t guinum | int64_t parentgui
bool gui_removeParent | int64_t guinum

int64_t gui_getParentWindow | int64_t guinum # Returns the id of the window that guinum belongs to, or guinum if it is a window.
int64_t gui_getParentGui | int64_t guinum

# Same as setParent, but also automatically makes sure the widget is a window if it isn't already.
bool gui_setAsWindow | int64_t guinum | int64_t parentgui


void gui_setModal | int64_t guinum | bool set_modal # if set_modal is true, modality is set to Qt::WindowModal
bool gui_isModal | int64_t guinum

gui_disableUpdates | int64_t gui # Note that gui_disableUpdates should be put inside a finally clause to ensure a corresponding gui_enableUpdates is called.
gui_enableUpdates | int64_t gui

int gui_width | int64_t guinum
int gui_height | int64_t guinum
int gui_getX | int64_t guinum
int gui_getY | int64_t guinum
void gui_moveToCentreOf | int64_t guinum | int64_t window_to_move_in_centre_of
void gui_moveToParentCentre | int64_t guinum # if gui has no parent, move to centre of screen
void gui_raise | int64_t guinum # It's unclear when you need to call raise, activate, or setFocus (obtainKeyboardFocus) in Qt. They should fix the API before V6.
void gui_activate | int64_t guinum # It's unclear when you need to call raise, activate, or setFocus (obtainKeyboardFocus) in Qt. They should fix the API before V6.
void gui_setPos | int64_t guinum | int x | int y # see also gui_moveToParentCentre
void gui_setSize | int64_t guinum | int width | int height
bool gui_mousePointsMainlyAt | int64_t guinum # Returns true if the mouse pointer is within the borders of the parent window of guinum, and the window is at toplevel.
void gui_setFullScreen | int64_t guinum | bool enable ? true # note that a full screen gui is not automatically deleted if the parent is deleted. And it is not deleted when set back to a non-full screen either if the parent was deleted while being full screen.
bool gui_isFullScreen | int64_t guinum

void gui_setTakesKeyboardFocus | int64_t guinum | bool take_it # Windows takes focus by default. This function only makes a difference if gui is a window. Non-window guis usualy doesn't obtain focus.
bool gui_takesKeyboardFocus | int64_t guinum

void gui_setBackgroundColor | int64_t guinum | const_char* color
const_char* gui_getBackgroundColor | int64_t guinum
void gui_setStyleSheet | int64_t guinum | const_char* stylesheet
void gui_setStyleSheetRecursively | int64_t guinum | const_char* stylesheet
void gui_setLayoutSpacing | int64_t guinum | int spacing | int left | int top | int right | int bottom
gui_addLayoutSpace | int64_t guinum | int width | int height | bool grow_horizontally ? true | bool grow_vertically ? true
void gui_setSizePolicy | int64_t guinum | bool grow_horizontally | bool grow_vertically
void gui_setMinWidth | int64_t guinum | int minwidth
void gui_setMinHeight | int64_t guinum | int minheight
void gui_setMaxWidth | int64_t guinum | int minwidth
void gui_setMaxHeight | int64_t guinum | int minheight
void gui_minimizeAsMuchAsPossible | int64_t guinum # tries to set as small 
void gui_setEnabled | int64_t guinum | bool is_enabled
void gui_setStaticToplevelWidget | int64_t guinum | bool add ? true # These guis can be used as parent when calling setParent with argument -3. They can also be used as parent for message windows and other windows in the program. The gui must be a toplevel window, and it can not be deleted or closed while it is marked as a static toplevel widget (it can be hidden though). Note that add=false can only be used in !RELEASE mode.

int64_t gui_getMainXSplitter
int64_t gui_getEditorGui
int64_t gui_getSequencerGui
int64_t gui_getInstrumentGui

const_char* getDateString | const_char* date_format ? "yyyy-MM-dd"
const_char* getTimeString | const_char* time_format ? "hh:mm:ss"
const_char* getHtmlFromText | const_char* text

# drawing

void gui_drawLine | int64_t guinum | const_char* color | float x1 | float y1 | float x2 | float y2 | float width
void gui_drawBox | int64_t guinum | const_char* color | float x1 | float y1 | float x2 | float y2 | float width | float round_x ? 5 | float round_y ? 5
void gui_filledBox | int64_t guinum | const_char* color | float x1 | float y1 | float x2 | float y2 | float round_x ? -1 | float round_y ? -1
void gui_drawEllipse | int64_t guinum | const_char* color | float x1 | float y1 | float x2 | float y2 | float width
void gui_filledEllipse | int64_t guinum | const_char* color | float x1 | float y1 | float x2 | float y2 
void gui_drawText | int64_t guinum | const_char* color | const_char* text | float x1 | float y1 | float x2 | float y2 | bool wrap_lines ? true | bool align_left ? false | bool align_top ? false | int rotate ? 0 # the 'rotate' parameter is in degrees (0 -> 360)
void gui_drawVerticalText | int64_t guinum | const_char* color | const_char* text | float x1 | float y1 | float x2 | float y2 | bool wrap_lines ? true | bool align_left ? false | bool align_top ? false # same as calling drawText with rotate=90

# obtaining keyboard focus
void obtainKeyboardFocus  | int64_t guinum ? -1 # Stops keyboard events to be delivered to the editor. Useful if implementing a custom gui. Note that the gui should be modal for this to work properly. You must also be VERY careful to ensure that releaseKeyboardFocus is called when finished.  It's also unclear when you need to call raise, activate, or setFocus (obtainKeyboardFocus) in Qt. Sometime you have to call activate as well (although activate seems to be an alternative to raise as well.) Qt should fix the API before V6.
void releaseKeyboardFocus # Gives back keyboard to the editor. It must NOT be called unless obtainKeyboardFocus was called first.
bool gui_hasKeyboardFocus | int64_t guinum

# mixer strips
informAboutGuiBeingAMixerStrips | int64_t guinum # internal
int64_t gui_createMixerStrips | int num_rows ? -1 | dyn_t instrument_ids ? g_uninitialized_dyn
int gui_getNumRowsInMixerStrips| int64_t guinum
void gui_setNumRowsInMixerStrips | int64_t guinum | int num_rows
void gui_resetAllMixerStrips
dyn_t gui_getMixerStripsConfiguration | int64_t guinum
void gui_setMixerStripsConfiguration | int64_t guinum | dyn_t configuration

int64_t showMixerStrips | int num_rows ? 1
int64_t showMixerStrips2 | int num_rows ? 1 | dyn_t instrument_ids ? g_uninitialized_dyn # May be removed one day. python uses showMixerStrips so we can't use dyn_t in any of the arguments.

int64_t gui_createSingleMixerStrip | int64_t instrument_id | int width ? 100 | int height ? 600

# utility function. Returns true if two triangles - a and b - intersects.
bool trianglesIntersects | float a_x1 | float a_y1 | float a_x2 | float a_y2 | float a_x3 | float a_y3 | float b_x1 | float b_y1 | float b_x2 | float b_y2 | float b_x3 | float b_y3 | bool allowReversed ? true | bool onBoundary ? false
