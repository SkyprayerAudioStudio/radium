
* There are two types of API functions:
  1. Those that takes care of undo/redo and graphics
  2. Those that doesn't.

  * They need have different names somehow. For instance by a prefix for
  the function names in type 1 or 2. (type 1 seems most natural, since
  type 2 are the ones used in scripts, while type 1 are usually only called via
  key bindings or menues.)

  * Type 2 doesn't take care of undo/redo. Suggestion:
    * Scripts must first tell radium which tracks/blocks/etc. that are going to be changed.
    * The functions in type 2 checks that the tracks/blocks/etc. that are manipulated, are really marked.
      If the script tries to manipulate something else, radium will refuse to do so + call RWarning.
      * No, if not, radium can just add that track/block/etc. into the current list of undo.
        The point about telling which track/block/etc. is going to be changed, is just to speed
        up situations where, for instance, you add 1000 notes to a track. Undoing that track 1000
        times is extremely inefficient.
        * But if that track is already in the undo list, why does it have to be added the next 999 times too?


* Updating the "LPB" and "BPM" text seems to just draw over the old graphics.

* The width for line numbers are too small when loading 1.rad.

* Config colors doesn't seem to work. (Could be because there is no "Left Meta" key)
  "Right Meta" seems to be equal to "Right Extra" though. But I'm not sure
  if "Left Meta" is equal to "Left Extra".

  * More likely a script problem: It seems like nothing Qt_stuff.py works.


* When loading a new song, the old editor window isn't closed.
  (When enabling GC again, this might crash the program. I guess there is no pointer
  to the data displayed in the window?)
  No, the extra window is actually functional. Guess it's just not removed from the
  list of edtor windows.

* Doesn't seem to work changing the slider values of midi effects in the midi properties window.
  Not volume either.

* Fix saving. (loading is probably broken as well now after midi refactoring)

