
* There are two types of API functions:
  1. Those that takes care of undo/redo and graphics
  2. Those that doesn't.

  * They need have different names somehow. For instance by a prefix for
  the function names in type 1 or 2. (type 1 seems most natural, since
  type 2 are the ones used in scripts, while type 1 are usually only called via
  key bindings or menues.)

  * Type 2 doesn't take care of undo/redo. Suggestion:
    * Scripts must first tell radium which tracks/blocks/etc. that are going to be changed.
    * The functions in type 2 checks that the tracks/blocks/etc. that are manipulated, are really marked.
      If the script tries to manipulate something else, radium will refuse to do so + call RWarning.
      * No, if not, radium can just add that track/block/etc. into the current list of undo.
        The point about telling which track/block/etc. is going to be changed, is just to speed
        up situations where, for instance, you add 1000 notes to a track. Undoing that track 1000
        times is extremely inefficient.
        * But if that track is already in the undo list, why does it have to be added the next 999 times too?


* The width for line numbers are too small when loading 1.rad.
  -Probably caused by missing font size handling. Currently, same font is always used.

* 1LZ, 1MR, etc. (could ask when selecting via menues)

* If making temponode area very big, and thn make window very small,
  then there's lots of warnings. Not unlikely to crash.
  Options:
    * Refuse to make window smaller
    * Make temponodearea smaller. (better)

* After selecting a menu, doquit is not checked. (must press a key first to quit)

* Alsaseq midi port names only contain the port names. They should also contain the client names.

* The error/warning window moves all other radium windows to the back, behind the terminal. Which is very annoying.

* Page up/down should scroll page up/down

* Trying to load a standard midi file as normal file (instead of selecting "import midi") should really import the midi file, not quit the editor.
  At least, it should not quit the editor.

* Trying to connect to ALSA seq port sometimes gives error message "invalid argument":
  "Could not connect to ALSA port 0. (Invalid argument)."
  Don't know how to reproduce.

* Resizing doesn't always update everything.

* Qt font handling has never been made properly.

* Loading standard midi file doesn't ask yes/no if current song is modified.

* When playing very fast, it probably looks better NOT to scroll 1 and 1 line at the time.

* Not unlikely that altGr, and possibly other qualifier keys, are autorepeating. Check if it is possible
  to check this, and manually autorepeat if autorepeat is turned on for any of the qualifier keys.
  If it is not possible (or very simple) to check this, just handle autorepeat manually for everyone.

* Thicker lines

* Anti aliasing, etc.
  QT4: painter.setRenderHints(QPainter::Antialiasing);
  QT: http://twinlib.roard.com/

* Bigger boxes by default

* Would be convenient with a realloc function.

* The line connecting note name with note graphics, would perhaps
  be better if was connected at the top. The reason is that we
  would use the full line height to visually show note placement
  within the line. Now, only half the line is used for this.

* Shift + Left/Right should change track, not Alt + Left/Right.
  Reason: Shift + Up/Down is used a lot, and changing track is a common operation.

* Qualifier keys are resetted after pressing.
  E.g pressing "Ctrl+1" and "Ctrl+2" while holding the Ctrl key pressed causes "Ctrl+1" and "2" to be executed.

* FX is missing for importing standard midi files.

* Blocklist/playlist non-stacking should only happen if there are more blocks / longer playlist than can be viewed simultaneously
  in the list boxes. And maybe not even then, since it looks bad and limits the number of characters to display.

* Loading t.rad makes radium crash.

* Must check what happens if there are no alsaseq ports.

* amiga/midiproperties/amiga_instrprop_camd_menues.c seems to contain mostly
  portable code. Should be moved to midi/ .

* When changing values in the instrument widget, MIDI signals should be sent.

* Play song might not work properly. Not playing all blocks.

* Midi stuff to menues.

* Windows menu:
   * Full screen option.
   * show/hide instrument widget
   * show/hide playlist widget

