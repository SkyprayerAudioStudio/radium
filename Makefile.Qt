#
# Users and packagers: Edit build_*.sh instead.
#


#----------------USER SETTINGS-------------------------------

# 1. Where to install
#
PREFIX ?= /usr/local
bindir = $(PREFIX)/bin
libdir = $(PREFIX)/lib


# 2. Where moc and uic for QT4 is installed.
# If you use Fedora, debian, ubuntu or arch Linux, the default values should work.
#
MOC ?= moc
UIC ?= uic


# 4. Release buid or Debug build
#
BUILDTYPE ?= DEBUG
#BUILDTYPE=RELEASE



# 5. Full path to a python2 executable.  (Think it needs to be at least V2.4)
#
PYTHONEXE ?= `which python2`



# 6. Opimization options. Only enabled in RELEASE build
OPTIMIZE ?= -mtune=native -O3


#----------------END USER SETTINGS---------------------------







#----------------DEFININTIONS----------------------

# Packagers: Don't change anything below here unless things don't work.


GCDIR=bin/packages/gc-7.2

MIDIINC=-Imidi/rtmidi
#MIDIINC=-Imidi/alsaseq



P=Qt/
API=api/

MAKEFILE=Makefile.Qt

MAX_NUM_UNDOS=800

CD=common/

CCC ?= g++
CC ?= gcc
LINKER ?= g++
PKG ?= pkg-config
PYPATH ?= 
QT_CFLAGS ?= `$(PKG) --cflags Qt3Support`
QT_LDFLAGS ?= `$(PKG) --libs Qt3Support`
GTK_CFLAGS ?= `$(PKG) --cflags gtk+-2.0`
GTK_LDFLAGS ?= `$(PKG) --libs gtk+-2.0`


DEFINES= -DNOPAUSEPLAY
# -DMEMORY_DEBUG
# define SYSBASEDEBUG
# define TRACKER_DEBUG
# define MEMORY_DEBUG
# define TRACKER_GB

# If you want QT visual: (not supported, probably not working)
# VISUAL=-DUSE_QT_VISUAL=1 -DUSE_GTK_VISUAL=0

# Or, if you want GTK visual:
VISUAL=-DUSE_QT_VISUAL=0 -DUSE_GTK_VISUAL=1


DEBUG_BUILD_OPTS = -DDEBUG -Werror -Wall -g
RELEASE_BUILD_OPTS = -DRELEASE -DDEBUG -g $(OPTIMIZE)

OS_OPTS ?= 
#OS_OPTS = -fPIC -I/usr/X11R6/include
OS_LDFLAGS ?=

OPT=-c `cat buildtype.opt` $(DEFINES) -I$(GCDIR)/include -I$(P) -I$(PYPATH) -DGUIISQT $(MIDIINC) -DUSE_GFX_OP_QUEUE $(CFLAGS) $(OS_OPTS) $(VISUAL)


# -pg

CPPOPT = $(OPT)


# Common QT opts (both 3 and 4)
COMMON_QTOPTS =

# QT4 opts
QTOPT = $(CPPOPT) -DUSE_QT4 $(QT_CFLAGS) $(COMMON_QTOPTS)
QTLINKFLAGS = $(QT_LDFLAGS) $(GTK_LDFLAGS)

#QTOPT = $(CPPOPT) -DUSE_QT4 -DQT_SHARED -DQT3_SUPPORT -I/home/kjetil/site/include/Qt3Support -I/home/kjetil/site/include/QtCore -I/home/kjetil/site/include/QtGui -I/home/kjetil/site/QtNetwork -I/home/kjetil/site/QtSql $(COMMON_QTOPTS)

#
# or:
#

# QT3 opts
# 
#QTOPT = $(CPPOPT) -DUSE_QT3 `pkg-config --cflags qt-mt` $(COMMON_QTOPTS)
#QTLINKFLAGS = `pkg-config --libs qt-mt` `pkg-config --libs gtk+-2.0`

#QTLINKFLAGS = $(QT_LDFLAGS) -static `pkg-config --static --libs gtk+-2.0`
#QTLINKFLAGS = $(QT_LDFLAGS) /tmp/radium/lib/libgtk-x11-2.0.a /tmp/radium/lib/libgdk-x11-2.0.a -L/tmp/radium/lib -latk-1.0 -lpangocairo-1.0 -lXext -lXrender -lXinerama -lXrandr -lXcursor -lXcomposite -lXdamage -lgdk_pixbuf-2.0 -lpangoft2-1.0 -lgio-2.0 -lXfixes -lcairo -lX11 -lpango-1.0 -lm -lfreetype -lfontconfig -lgobject-2.0 -lglib-2.0

#/home/kjetil/site/src/qt-x11-free-3.3.8b/lib/libqt.a 

#`pkg-config --libs gtk+-2.0`
#/tmp/radium/lib/ -static -lX11 -lXext -lXft -lXcursor -lXinerama -lXrandr -lSM



# rtmidi flags
RTMIDI_DIR = midi/rtmidi/rtmidi-2.0.0
RTMIDI_CFLAGS ?= -D__DUMMY__
#-fexceptions
RTMIDI_LDFLAGS ?= 



#-------------------OBJECT DEFINITIONS-------------------------------

OBJ1= windows.o window_config.o list.o song.o blocks.o block_insert.o block_split.o block_delete.o block_properties.o tracks.o localzooms.o control.o lines.o font.o track_insert.o track_onoff.o settings.o

OBJ2= notes.o notes_legalize.o wblocks.o wtracks.o sliders.o gfx_wblocks.o gfx_wblocks_reltempo.o gfx_statusbar.o gfx_tempotrackheader.o gfx_upperleft.o common.o gfx_wtracks.o gfx_wtrackborder.o gfx_wtext.o gfx_text.o gfx_lines.o gfx_point.o gfx_op_queue.o

OBJ3= eventreciever.o reallines.o notestext.o trackreallines.o clipboard_range.o clipboard_range_calc.o clipboard_range_copy.o clipboard_range_paste.o clipboard_range_cut.o transpose.o backwards.o invert.o glissando.o pitchexpand.o clipboard_track_copy.o clipboard_track_paste.o clipboard_track_cut.o clipboard_tempos_copy.o clipboard_localzooms.o clipboard_block_copy.o clipboard_block_paste.o quantitize.o

OBJ4= mouse.o mouse_wtrack.o mouse_wtrackheader.o mouse_tempoheader.o mouse_wtrackborder.o mouse_temponodeborder.o mouse_fxarea.o mouse_vellinenode.o mouse_vellineend.o mouse_vellinestart.o mouse_fxnode.o mouse_quantitize.o mouse_reltemposlider.o tbox.o area.o

OBJ5= debug.o memory.o placement.o t_gc.o cursor.o cursor_updown.o subtrack.o velocities.o pixmap.o scroll.o blts.o

OBJ6= realline_calc.o gfx_subtrack.o LPB.o gfx_wtrackheaders.o gfx_wtrackheader_volpan.o gfx_slider.o reallines_insert.o gfx_shrink.o gfx_shrink_t.o gfx_request.o

OBJ7= nodelines.o nodeboxes.o instruments.o patch.o fxlines.o fxlines_legalize.o blocklist.o  scroll_play.o gfx_tempocolor.o

#Tempos and time
OBJ8= reltempo.o temponodes.o tempos.o time.o time2place.o mouse_temponodes.o temponodes_legalize.o

#Playing
OBJ9= Ptask2Mtask.o player.o PEQrealline.o PEQmempool.o PEQblock.o PEQnotes.o PEQcommon.o playerclass.o player_startstop.o PEQvelocities.o PEQ_calc.o PEQfxs.o player_pause.o PEQ_type.o PEQ_calc_64bit.o PEQ_clock.o

#Disk
OBJ10= disk.o disk_fxs.o disk_wblock.o disk_localzooms.o disk_track.o disk_fx.o disk_fxnodelines.o disk_wtrack.o disk_temponodes.o disk_tempos.o disk_song.o disk_velocities.o disk_block.o disk_placement.o disk_stops.o disk_playlist.o disk_root.o disk_notes.o disk_lpbs.o disk_windows.o disk_warea.o disk_save.o disk_load.o disk_instrument.o disk_patches.o disk_slider.o

#Undo
OBJ11= undo.o undo_notes.o undo_fxs.o undo_temponodes.o undo_tempos.o undo_lpbs.o undo_notesandfxs.o undo_reallines.o undo_tracks.o undo_range.o undo_blocks.o undo_trackheader.o undo_reltempomax.o undo_maintempos.o undo_block_insertdelete.o undo_block_mergesplit.o undo_reltemposlider.o undo_playlist.o

#X11 Spesific
#OBJ12= X11_visual.o X11_error.o X11_Ptask2Mtask.o X11_Bs_edit.o X11_Main.o X11_endprogram.o X11_disk.o X11_Player.o X11_memory.o X11_ReqType.o X11_keyboard.o X11_MidiProperties.o

#Qt Spesific
OBJ12= Qt_visual.o GTK_visual.o Qt_Main.o Qt_endprogram.o X11_disk.o Qt_EventReceiver.o Qt_colors.o Qt_Menues.o Qt_Fonts.o Qt_MainWindow.o qcolordialog.o Qt_Bs_edit.o Qt_instruments.o Qt_memory.o GTK_ReqType.o X11_Qtstuff.o X11_keyboard.o X11_error.o 

#X11_MidiProperties.o  X11_ClientMessages.o 
#Qt_Bs_edit.o 

#Posix
OBJ_POSIX=posix_settings.o posix_Player.o 

#Windows
OBJ_WIN=W_Error.o

#Python
OBJ13=radium_wrap.o api_common.o api_keyplay.o api_keyplayedit.o api_navigate.o api_noteedit.o api_support.o ad_noteadd.o wrapfunclist.o api_trackonoff.o api_zoom.o api_notemanipulate.o api_play.o api_clipboard.o api_undo.o api_various.o api_instruments.o api_requesters.o

#Midi
OBJ14=disk_midi_fx.o disk_midi_i_plugin.o midi_fx.o midi_i_plugin.o midi_playfromstart.o midi_rtmidi.o RtMidi.o midi_i_input.o midi_menues.o
# alsaseq_midi.o

OBJ=  $(OBJ1) $(OBJ2) $(OBJ3) $(OBJ4) $(OBJ5) $(OBJ6) $(OBJ7) $(OBJ8) $(OBJ9) $(OBJ10) $(OBJ11) $(OBJ12) $(OBJ13) $(OBJ_POSIX) $(OBJ_WIN) $(OBJ14)




#-------------------KARSJK-------------------------------

BUILD_DEPENDENCIES =  buildtype.opt $(CD)keyboard_sub_ids.h dependencies_ok

PROGRAM_MODULES = bin/radium bin/protoconfparser.py bin/protos.conf bin/common.py bin/X11_Qtstuff.py
OBJECT_DEPENDENCIES = $(BUILD_DEPENDENCIES)

all:
	@echo
	@echo "Use one of the ./build_* scripts to build Radium."
	@echo


radium: $(BUILD_DEPENDENCIES) $(PROGRAM_MODULES)
	@echo
	@echo "Compilation OK."
	@echo
	@echo "Run './start.sh' to start radium"
	@echo "Run 'make install' to install radium"

very_clean: clean
	cd bin/packages && ./buildclean.sh

clean:
	rm -f *.o */*.o featurelist *~ */*~ */*~ */*/*~ core bin/core */*.pyc */*/*.pyc $(API)radium_wrap.c $(API)wrapfunclist.c $(API)radium.i $(API)radium_proc.h bin/protoconfparser.py bin/protos.conf bin/common.py bin/radium python/core bin/X11_XSendEvent bin/X11_Qtstuff.py makescript.sh $(P)Qt_instruments_widget.h $(P)Qt_instrument_widget.h $(P)Qt_control_change_widget.h $(P)mQt* a.out common/keyboard_sub_ids.h w dependencies_ok buildtype.opt

dependencies_ok: check_dependencies.sh Makefile
	sh check_dependencies.sh /usr/bin/python $(MOC) $(UIC)
#	sh check_dependencies.sh $(PYTHONEXE) $(MOC) $(UIC)
	touch dependencies_ok

install:
	sh check_install_dependencies.sh
	install -d $(DESTDIR)$(bindir)
	install -d $(DESTDIR)$(libdir)/radium

	cp -a bin/* $(DESTDIR)$(libdir)/radium/
	rm -fr $(DESTDIR)$(libdir)/radium/packages/*.tar.*

	rm -fr $(DESTDIR)$(libdir)/radium/packages/man
	rm -fr $(DESTDIR)$(libdir)/radium/packages/gc-7.2

	rm -fr $(DESTDIR)$(libdir)/radium/packages/xmessage-1.0.3/*
	cp bin/packages/xmessage-1.0.3/xmessage $(DESTDIR)$(libdir)/radium/packages/xmessage-1.0.3/

	chmod -R a+rx $(DESTDIR)$(libdir)/radium/*

	echo "#!/bin/sh" >$(DESTDIR)$(bindir)/radium
	echo "cd " $(DESTDIR)$(libdir)/radium >>$(DESTDIR)$(bindir)/radium
	echo "QT_NO_GLIB=1 ./radium" >>$(DESTDIR)$(bindir)/radium

	chmod a+rx $(DESTDIR)$(bindir)/radium

uninstall:
	rm -fr $(DESTDIR)$(libdir)/radium
	rm -f $(DESTDIR)$(bindir)/radium

run-gdb:
	./build_linux.sh -j3 && cd bin && G_DEBUG=fatal-criticals QT_FATAL_WARNINGS=1 QT_NO_GLIB=1 gdb ./radium
#	make -j3 && cd bin && G_DEBUG=fatal-criticals QT_FATAL_WARNINGS=1 gdb --args $(PYTHONEXE) start.py keybindings.conf && cd ..          

run-valgrind:
	$(CC) -DMEMORY_DEBUG $(CD)memory.c $(OPT)
#	make -j3 && cd bin && valgrind --tool=helgrind $(PYTHONEXE) start.py keybindings.conf
	make -j3 && rm memory.o && cd bin && valgrind --suppressions=../valgrind-python.supp --tool=memcheck --leak-check=no --read-var-info=yes --track-origins=yes $(PYTHONEXE) -E -tt start.py keybindings.conf
#	make -j3 && cd bin && valgrind gdb --args $(PYTHONEXE) start.py keybindings.conf
	killall -9 X11_Qtstuff.py radium

# --tool=memcheck --read-var-info=yes --track-origins=yes


packages: bin/packages/deletemetorebuild

bin/packages/deletemetorebuild: bin/packages/build.sh
	echo "\
	cd bin/packages;\
	./build.sh $(PYTHONEXE) no \
	" >makescript.sh
	sh makescript.sh
	@echo
	@echo "packages successfully built. Now run ./build_linux.sh -j7"

start_bin.sh:
	echo "#!/bin/sh" >start_bin.sh
	echo "cd bin" >>start_bin.sh
	echo "LD_LIBRARY_PATH=../lib $(PYTHONEXE) start.py keybindings.conf $@" >>start_bin.sh
	chmod a+rx start_bin.sh


bin/radium: $(OBJ) $(MAKEFILE)
	$(LINKER) $(OBJ) -o bin/radium -g -lm $(QTLINKFLAGS) $(RTMIDI_LDFLAGS) $(LDFLAGS) $(OS_LDFLAGS)
#	$(LINKER) $(OBJ) $(GCDIR)/.libs/libgc.a -o bin/radium -g -lm -lpython2.6 -lpthread $(QTLINKFLAGS) $(RTMIDI_LDFLAGS) $(LDFLAGS) -fPIC

#	$(LINKER) -shared $(OBJ) $(GCDIR)/.libs/libgc.a -o bin/radiummodule.so -g -lm -lasound -L/home/kjetil/site/lib `pkg-config --libs Qt3Support` -lprofiler
# -pg 
#  -lasound

$(CD)keyboard_sub_ids.h: bin/generate_keyboard_sub_ids.py bin/keysubids.py
	cd bin && $(PYTHONEXE) generate_keyboard_sub_ids.py >../$(CD)keyboard_sub_ids.h

bin/protoconfparser.py: $(API)protoconfparser.py
	echo "#This file is copied from ../api/ during make-process" >bin/protoconfparser.py
	cat $(API)protoconfparser.py >>bin/protoconfparser.py

bin/protos.conf: $(API)protos.conf
	echo "#Warning! Strange things may happen if this file is changed." >bin/protos.conf
	echo "#The file is copied from ../python/ during make-process." >>bin/protos.conf
	cat $(API)protos.conf >>bin/protos.conf

bin/common.py: $(API)common.py
	echo "#This file is copied from ../python/ during make-process." >bin/common.py
	cat $(API)common.py >>bin/common.py


bin/X11_Qtstuff.py: X11/X11_Qtstuff.py Makefile
	rm -f bin/X11_Qtstuff.py
	echo "#!$(PYTHONEXE)" >bin/X11_Qtstuff.py
	echo "" >>bin/X11_Qtstuff.py
	echo "#Do not edit, this file is automaticly generated." >>bin/X11_Qtstuff.py
	echo "" >>bin/X11_Qtstuff.py
	cat X11/X11_Qtstuff.py >>bin/X11_Qtstuff.py
	chmod a+rx bin/X11_Qtstuff.py


#-----------------COMPILING-----------------------------

windows.o:  $(BUILD_DEPENDENCIES) $(CD)windows.c 
	$(CC) $(CD)windows.c $(OPT)

list.o:  $(BUILD_DEPENDENCIES) $(CD)list.c 
	$(CC) $(CD)list.c $(OPT)

song.o:  $(BUILD_DEPENDENCIES) $(CD)song.c 
	$(CC) $(CD)song.c $(OPT)

blocks.o:  $(BUILD_DEPENDENCIES) $(CD)blocks.c 
	$(CC) $(CD)blocks.c $(OPT)

tracks.o:  $(BUILD_DEPENDENCIES) $(CD)tracks.c 
	$(CC) $(CD)tracks.c $(OPT)

localzooms.o:  $(BUILD_DEPENDENCIES) $(CD)localzooms.c 
	$(CC) $(CD)localzooms.c $(OPT)

notes.o:  $(BUILD_DEPENDENCIES) $(CD)notes.c 
	$(CC) $(CD)notes.c $(OPT)

wblocks.o:  $(BUILD_DEPENDENCIES) $(CD)wblocks.c 
	$(CC) $(CD)wblocks.c $(OPT)

wtracks.o:  $(BUILD_DEPENDENCIES) $(CD)wtracks.c 
	$(CC) $(CD)wtracks.c $(OPT)

sliders.o:  $(BUILD_DEPENDENCIES) $(CD)sliders.c 
	$(CC) $(CD)sliders.c $(OPT)

gfx_wblocks.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_wblocks.c 
	$(CC) $(CD)gfx_wblocks.c $(OPT)

common.o:  $(BUILD_DEPENDENCIES) $(CD)common.c 
	$(CC) $(CD)common.c $(OPT)

gfx_wtracks.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_wtracks.c 
	$(CC) $(CD)gfx_wtracks.c $(OPT)

gfx_wtrackborder.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_wtrackborder.c
	$(CC) $(CD)gfx_wtrackborder.c $(OPT)

gfx_wtext.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_wtext.c 
	$(CC) $(CD)gfx_wtext.c $(OPT)

gfx_text.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_text.c  $(CD)visual_op_queue_proc.h
	$(CC) $(CD)gfx_text.c $(OPT)

gfx_lines.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_lines.c $(CD)visual_op_queue_proc.h
	$(CC) $(CD)gfx_lines.c $(OPT)

gfx_point.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_point.c $(CD)visual_op_queue_proc.h
	$(CC) $(CD)gfx_point.c $(OPT)

gfx_op_queue.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_op_queue_generated.c $(CD)visual_op_queue_proc.h $(CD)gfx_op_queue.c
	$(CC) $(CD)gfx_op_queue.c $(OPT)

$(CD)gfx_op_queue_generated.c: $(CD)gfx_op_queue.scm $(CD)gfx_op_queue.c
	cd $(CD) && ./gfx_op_queue.scm op-queue-code >gfx_op_queue_generated.c

$(CD)visual_op_queue_proc.h: $(CD)gfx_op_queue.scm 
	cd $(CD) && ./gfx_op_queue.scm protos >visual_op_queue_proc.h

eventreciever.o:  $(BUILD_DEPENDENCIES) $(CD)eventreciever.c $(API)radium_proc.h
	$(CC) $(CD)eventreciever.c $(OPT)

reallines.o:  $(BUILD_DEPENDENCIES) $(CD)reallines.c
	$(CC) $(CD)reallines.c $(OPT)

mouse.o:  $(BUILD_DEPENDENCIES) $(CD)mouse.c
	$(CC) $(CD)mouse.c $(OPT)

notestext.o:  $(BUILD_DEPENDENCIES) $(CD)notestext.c
	$(CC) $(CD)notestext.c $(OPT)

trackreallines.o:  $(BUILD_DEPENDENCIES) $(CD)trackreallines.c
	$(CC) $(CD)trackreallines.c $(OPT)

debug.o:  $(BUILD_DEPENDENCIES) $(CD)debug.c
	$(CC) $(CD)debug.c $(OPT) 

memory.o:  $(BUILD_DEPENDENCIES) $(CD)memory.c
	$(CC) $(CD)memory.c $(OPT)

placement.o:  $(BUILD_DEPENDENCIES) $(CD)placement.c
	$(CC) $(CD)placement.c $(OPT)

t_gc.o:  $(BUILD_DEPENDENCIES) $(CD)t_gc.c
	$(CC) $(CD)t_gc.c $(OPT)

cursor.o:  $(BUILD_DEPENDENCIES) $(CD)cursor.c
	$(CC) $(CD)cursor.c $(OPT)

cursor_updown.o:  $(BUILD_DEPENDENCIES) $(CD)cursor_updown.c
	$(CC) $(CD)cursor_updown.c $(OPT)

subtrack.o:  $(BUILD_DEPENDENCIES) $(CD)subtrack.c
	$(CC) $(CD)subtrack.c $(OPT)

velocities.o:  $(BUILD_DEPENDENCIES) $(CD)velocities.c
	$(CC) $(CD)velocities.c $(OPT)

realline_calc.o:  $(BUILD_DEPENDENCIES) $(CD)realline_calc.c
	$(CC) $(CD)realline_calc.c $(OPT)

gfx_subtrack.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_subtrack.c
	$(CC) $(CD)gfx_subtrack.c $(OPT)

tempos.o:  $(BUILD_DEPENDENCIES) $(CD)tempos.c
	$(CC) $(CD)tempos.c $(OPT)

LPB.o:  $(BUILD_DEPENDENCIES) $(CD)LPB.c
	$(CC) $(CD)LPB.c $(OPT)

gfx_wtrackheaders.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_wtrackheaders.c
	$(CC) $(CD)gfx_wtrackheaders.c $(OPT)

nodelines.o:  $(BUILD_DEPENDENCIES) $(CD)nodelines.c
	$(CC) $(CD)nodelines.c $(OPT)

temponodes.o:  $(BUILD_DEPENDENCIES) $(CD)temponodes.c
	$(CC) $(CD)temponodes.c $(OPT)

instruments.o:  $(BUILD_DEPENDENCIES) $(CD)instruments.c
	$(CC) $(CD)instruments.c $(OPT)

fxlines.o:  $(BUILD_DEPENDENCIES) $(CD)fxlines.c
	$(CC) $(CD)fxlines.c $(OPT)

tbox.o:  $(BUILD_DEPENDENCIES) $(CD)tbox.c
	$(CC) $(CD)tbox.c $(OPT)


area.o:  $(BUILD_DEPENDENCIES) $(CD)area.c
	$(CC) $(CD)area.c $(OPT)

mouse_wtrack.o:  $(BUILD_DEPENDENCIES) $(CD)mouse_wtrack.c
	$(CC) $(CD)mouse_wtrack.c $(OPT)


mouse_temponodes.o:  $(BUILD_DEPENDENCIES) $(CD)mouse_temponodes.c
	$(CC) $(CD)mouse_temponodes.c $(OPT)


mouse_wtrackborder.o:  $(BUILD_DEPENDENCIES) $(CD)mouse_wtrackborder.c
	$(CC) $(CD)mouse_wtrackborder.c $(OPT)


mouse_temponodeborder.o:  $(BUILD_DEPENDENCIES) $(CD)mouse_temponodeborder.c
	$(CC) $(CD)mouse_temponodeborder.c $(OPT)


mouse_fxarea.o:  $(BUILD_DEPENDENCIES) $(CD)mouse_fxarea.c
	$(CC) $(CD)mouse_fxarea.c $(OPT)

mouse_vellinenode.o:  $(BUILD_DEPENDENCIES) $(CD)mouse_vellinenode.c
	$(CC) $(CD)mouse_vellinenode.c $(OPT)

mouse_vellinestart.o:  $(BUILD_DEPENDENCIES) $(CD)mouse_vellinestart.c
	$(CC) $(CD)mouse_vellinestart.c $(OPT)

mouse_vellineend.o:  $(BUILD_DEPENDENCIES) $(CD)mouse_vellineend.c
	$(CC) $(CD)mouse_vellineend.c $(OPT)

mouse_fxnode.o:  $(BUILD_DEPENDENCIES) $(CD)mouse_fxnode.c
	$(CC) $(CD)mouse_fxnode.c $(OPT)

blocklist.o:  $(BUILD_DEPENDENCIES) $(CD)blocklist.c
	$(CC) $(CD)blocklist.c $(OPT)

time.o:  $(BUILD_DEPENDENCIES) $(CD)time.c
	$(CC) $(CD)time.c $(OPT) 

reltempo.o:  $(BUILD_DEPENDENCIES) $(CD)reltempo.c
	$(CC) $(CD)reltempo.c $(OPT)


#player source-files.

Ptask2Mtask.o:  $(BUILD_DEPENDENCIES) $(CD)Ptask2Mtask.c $(CD)playerclass.h
	$(CC) $(CD)Ptask2Mtask.c $(OPT) 

player.o:  $(BUILD_DEPENDENCIES) $(CD)player.c $(CD)playerclass.h
	$(CC) $(CD)player.c $(OPT)

PEQrealline.o:  $(BUILD_DEPENDENCIES) $(CD)PEQrealline.c $(CD)playerclass.h
	$(CC) $(CD)PEQrealline.c $(OPT) 

PEQmempool.o:  $(BUILD_DEPENDENCIES) $(CD)PEQmempool.c $(CD)playerclass.h
	$(CC) $(CD)PEQmempool.c $(OPT) 

PEQblock.o:  $(BUILD_DEPENDENCIES) $(CD)PEQblock.c $(CD)playerclass.h
	$(CC) $(CD)PEQblock.c $(OPT)

PEQnotes.o:  $(BUILD_DEPENDENCIES) $(CD)PEQnotes.c $(CD)playerclass.h
	$(CC) $(CD)PEQnotes.c $(OPT)

PEQcommon.o:  $(BUILD_DEPENDENCIES) $(CD)PEQcommon.c $(CD)playerclass.h
	$(CC) $(CD)PEQcommon.c $(OPT)

playerclass.o:  $(BUILD_DEPENDENCIES) $(CD)playerclass.c $(CD)playerclass.h
	$(CC) $(CD)playerclass.c $(OPT)

player_startstop.o:  $(BUILD_DEPENDENCIES) $(CD)player_startstop.c $(CD)playerclass.h
	$(CC) $(CD)player_startstop.c $(OPT)

PEQvelocities.o:  $(BUILD_DEPENDENCIES) $(CD)PEQvelocities.c
	$(CC) $(CD)PEQvelocities.c $(OPT)

PEQ_calc.o:  $(BUILD_DEPENDENCIES) $(CD)PEQ_calc.c
	$(CC) $(CD)PEQ_calc.c $(OPT)

PEQfxs.o:  $(BUILD_DEPENDENCIES) $(CD)PEQfxs.c
	$(CC) $(CD)PEQfxs.c $(OPT)

patch.o:  $(BUILD_DEPENDENCIES) $(CD)patch.c
	$(CC) $(CD)patch.c $(OPT)

clipboard_range.o:  $(BUILD_DEPENDENCIES) $(CD)clipboard_range.c $(CD)clipboard_range.h
	$(CC) $(CD)clipboard_range.c $(OPT)

clipboard_range_calc.o:  $(BUILD_DEPENDENCIES) $(CD)clipboard_range_calc.c $(CD)clipboard_range.h
	$(CC) $(CD)clipboard_range_calc.c $(OPT)

clipboard_range_copy.o:  $(BUILD_DEPENDENCIES) $(CD)clipboard_range_copy.c $(CD)clipboard_range.h
	$(CC) $(CD)clipboard_range_copy.c $(OPT)

clipboard_range_paste.o:  $(BUILD_DEPENDENCIES) $(CD)clipboard_range_paste.c $(CD)clipboard_range.h
	$(CC) $(CD)clipboard_range_paste.c $(OPT)

clipboard_range_cut.o:  $(BUILD_DEPENDENCIES) $(CD)clipboard_range_cut.c $(CD)clipboard_range.h
	$(CC) $(CD)clipboard_range_cut.c $(OPT)

player_pause.o:  $(BUILD_DEPENDENCIES) $(CD)player_pause.c $(CD)playerclass.h
	$(CC) $(CD)player_pause.c $(OPT)

PEQ_type.o:  $(BUILD_DEPENDENCIES) $(CD)PEQ_type.c $(CD)playerclass.h
	$(CC) $(CD)PEQ_type.c $(OPT)


transpose.o:  $(BUILD_DEPENDENCIES) $(CD)transpose.c
	$(CC) $(CD)transpose.c $(OPT)



disk_wblock.o:  $(BUILD_DEPENDENCIES) $(CD)disk_wblock.c $(CD)disk.h
	$(CC) $(CD)disk_wblock.c $(OPT)


disk_localzooms.o:  $(BUILD_DEPENDENCIES) $(CD)disk_localzooms.c $(CD)disk.h
	$(CC) $(CD)disk_localzooms.c $(OPT)


disk_track.o:  $(BUILD_DEPENDENCIES) $(CD)disk_track.c $(CD)disk.h
	$(CC) $(CD)disk_track.c $(OPT)

disk_fx.o:  $(BUILD_DEPENDENCIES) $(CD)disk_fx.c $(CD)disk.h
	$(CC) $(CD)disk_fx.c $(OPT)

disk_fxnodelines.o:  $(BUILD_DEPENDENCIES) $(CD)disk_fxnodelines.c $(CD)disk.h
	$(CC) $(CD)disk_fxnodelines.c $(OPT)

disk_wtrack.o:  $(BUILD_DEPENDENCIES) $(CD)disk_wtrack.c $(CD)disk.h
	$(CC) $(CD)disk_wtrack.c $(OPT)

disk_temponodes.o:  $(BUILD_DEPENDENCIES) $(CD)disk_temponodes.c $(CD)disk.h
	$(CC) $(CD)disk_temponodes.c $(OPT)

disk_tempos.o:  $(BUILD_DEPENDENCIES) $(CD)disk_tempos.c $(CD)disk.h
	$(CC) $(CD)disk_tempos.c $(OPT)

disk_song.o:  $(BUILD_DEPENDENCIES) $(CD)disk_song.c $(CD)disk.h
	$(CC) $(CD)disk_song.c $(OPT)

disk_velocities.o:  $(BUILD_DEPENDENCIES) $(CD)disk_velocities.c $(CD)disk.h
	$(CC) $(CD)disk_velocities.c $(OPT)

disk_block.o:  $(BUILD_DEPENDENCIES) $(CD)disk_block.c $(CD)disk.h
	$(CC) $(CD)disk_block.c $(OPT)

disk_placement.o:  $(BUILD_DEPENDENCIES) $(CD)disk_placement.c $(CD)disk.h
	$(CC) $(CD)disk_placement.c $(OPT)

disk_stops.o:  $(BUILD_DEPENDENCIES) $(CD)disk_stops.c $(CD)disk.h
	$(CC) $(CD)disk_stops.c $(OPT)

disk_playlist.o:  $(BUILD_DEPENDENCIES) $(CD)disk_playlist.c $(CD)disk.h
	$(CC) $(CD)disk_playlist.c $(OPT)

disk_root.o:  $(BUILD_DEPENDENCIES) $(CD)disk_root.c $(CD)disk.h
	$(CC) $(CD)disk_root.c $(OPT)

disk_notes.o:  $(BUILD_DEPENDENCIES) $(CD)disk_notes.c $(CD)disk.h
	$(CC) $(CD)disk_notes.c $(OPT)

disk_lpbs.o:  $(BUILD_DEPENDENCIES) $(CD)disk_lpbs.c $(CD)disk.h
	$(CC) $(CD)disk_lpbs.c $(OPT)

disk_windows.o:  $(BUILD_DEPENDENCIES) $(CD)disk_windows.c $(CD)disk.h
	$(CC) $(CD)disk_windows.c $(OPT)

disk_fxs.o:  $(BUILD_DEPENDENCIES) $(CD)disk_fxs.c $(CD)disk.h
	$(CC) $(CD)disk_fxs.c $(OPT)

disk.o:  $(BUILD_DEPENDENCIES) $(CD)disk.c $(CD)disk.h
	$(CC) $(CD)disk.c $(OPT)

disk_warea.o:  $(BUILD_DEPENDENCIES) $(CD)disk_warea.c $(CD)disk.h
	$(CC) $(CD)disk_warea.c $(OPT)

disk_save.o:  $(BUILD_DEPENDENCIES) $(CD)disk_save.c config/config.h
	$(CC) $(CD)disk_save.c $(OPT)

disk_load.o:  $(BUILD_DEPENDENCIES) $(CD)disk_load.c config/config.h
	$(CC) $(CD)disk_load.c $(OPT)

control.o:  $(BUILD_DEPENDENCIES) $(CD)control.c
	$(CC) $(CD)control.c $(OPT)

disk_instrument.o:  $(BUILD_DEPENDENCIES) $(CD)disk_instrument.c $(CD)disk.h
	$(CC) $(CD)disk_instrument.c $(OPT)

disk_patches.o:  $(BUILD_DEPENDENCIES) $(CD)disk_patches.c $(CD)disk.h
	$(CC) $(CD)disk_patches.c $(OPT)

disk_slider.o:  $(BUILD_DEPENDENCIES) $(CD)disk_slider.c
	$(CC) $(CD)disk_slider.c $(OPT)

clipboard_track_copy.o:  $(BUILD_DEPENDENCIES) $(CD)clipboard_track_copy.c
	$(CC) $(CD)clipboard_track_copy.c $(OPT)

clipboard_track_paste.o:  $(BUILD_DEPENDENCIES) $(CD)clipboard_track_paste.c
	$(CC) $(CD)clipboard_track_paste.c $(OPT)

clipboard_track_cut.o:  $(BUILD_DEPENDENCIES) $(CD)clipboard_track_cut.c
	$(CC) $(CD)clipboard_track_cut.c $(OPT)

lines.o:  $(BUILD_DEPENDENCIES) $(CD)lines.c
	$(CC) $(CD)lines.c $(OPT)

notes_legalize.o:  $(BUILD_DEPENDENCIES) $(CD)notes_legalize.c
	$(CC) $(CD)notes_legalize.c $(OPT)

temponodes_legalize.o:  $(BUILD_DEPENDENCIES) $(CD)temponodes_legalize.c
	$(CC) $(CD)temponodes_legalize.c $(OPT)

fxlines_legalize.o:  $(BUILD_DEPENDENCIES) $(CD)fxlines_legalize.c
	$(CC) $(CD)fxlines_legalize.c $(OPT)

reallines_insert.o:  $(BUILD_DEPENDENCIES) $(CD)reallines_insert.c
	$(CC) $(CD)reallines_insert.c $(OPT)

block_properties.o:  $(BUILD_DEPENDENCIES) $(CD)block_properties.c
	$(CC) $(CD)block_properties.c $(OPT)

clipboard_tempos_copy.o:  $(BUILD_DEPENDENCIES) $(CD)clipboard_tempos_copy.c
	$(CC) $(CD)clipboard_tempos_copy.c $(OPT)

font.o:  $(BUILD_DEPENDENCIES) $(CD)font.c
	$(CC) $(CD)font.c $(OPT)

clipboard_localzooms.o:  $(BUILD_DEPENDENCIES) $(CD)clipboard_localzooms.c
	$(CC) $(CD)clipboard_localzooms.c $(OPT)

clipboard_block_copy.o:  $(BUILD_DEPENDENCIES) $(CD)clipboard_block_copy.c
	$(CC) $(CD)clipboard_block_copy.c $(OPT)

clipboard_block_paste.o:  $(BUILD_DEPENDENCIES) $(CD)clipboard_block_paste.c
	$(CC) $(CD)clipboard_block_paste.c $(OPT)

undo.o:  $(BUILD_DEPENDENCIES) $(CD)undo.c $(CD)undo.h
	$(CC) $(CD)undo.c $(OPT) -DMAX_NUM_UNDOS=$(MAX_NUM_UNDOS)

undo_notes.o:  $(BUILD_DEPENDENCIES) $(CD)undo_notes.c $(CD)undo.h
	$(CC) $(CD)undo_notes.c $(OPT)

undo_fxs.o:  $(BUILD_DEPENDENCIES) $(CD)undo_fxs.c $(CD)undo.h
	$(CC) $(CD)undo_fxs.c $(OPT)

undo_temponodes.o:  $(BUILD_DEPENDENCIES) $(CD)undo_temponodes.c $(CD)undo.h
	$(CC) $(CD)undo_temponodes.c $(OPT)

undo_tempos.o:  $(BUILD_DEPENDENCIES) $(CD)undo_tempos.c $(CD)undo.h
	$(CC) $(CD)undo_tempos.c $(OPT)

undo_lpbs.o:  $(BUILD_DEPENDENCIES) $(CD)undo_lpbs.c $(CD)undo.h
	$(CC) $(CD)undo_lpbs.c $(OPT)

undo_notesandfxs.o:  $(BUILD_DEPENDENCIES) $(CD)undo_notesandfxs.c $(CD)undo.h
	$(CC) $(CD)undo_notesandfxs.c $(OPT)

undo_reallines.o:  $(BUILD_DEPENDENCIES) $(CD)undo_reallines.c $(CD)undo.h
	$(CC) $(CD)undo_reallines.c $(OPT)

undo_tracks.o:  $(BUILD_DEPENDENCIES) $(CD)undo_tracks.c $(CD)undo.h
	$(CC) $(CD)undo_tracks.c $(OPT)

undo_range.o:  $(BUILD_DEPENDENCIES) $(CD)undo_range.c
	$(CC) $(CD)undo_range.c $(OPT)

undo_blocks.o:  $(BUILD_DEPENDENCIES) $(CD)undo_blocks.c
	$(CC) $(CD)undo_blocks.c $(OPT)

time2place.o:  $(BUILD_DEPENDENCIES) $(CD)time2place.c
	$(CC) $(CD)time2place.c $(OPT)

nodeboxes.o:  $(BUILD_DEPENDENCIES) $(CD)nodeboxes.c
	$(CC) $(CD)nodeboxes.c $(OPT)

PEQ_calc_64bit.o:  $(BUILD_DEPENDENCIES) $(CD)PEQ_calc_64bit.c
	$(CC) $(CD)PEQ_calc_64bit.c $(OPT)

track_insert.o:  $(BUILD_DEPENDENCIES) $(CD)track_insert.c
	$(CC) $(CD)track_insert.c $(OPT)

quantitize.o:  $(BUILD_DEPENDENCIES) $(CD)quantitize.c
	$(CC) $(CD)quantitize.c $(OPT)

gfx_wtrackheader_volpan.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_wtrackheader_volpan.c
	$(CC) $(CD)gfx_wtrackheader_volpan.c $(OPT)

mouse_wtrackheader.o:  $(BUILD_DEPENDENCIES) $(CD)mouse_wtrackheader.c
	$(CC) $(CD)mouse_wtrackheader.c $(OPT)

gfx_tempotrackheader.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_tempotrackheader.c
	$(CC) $(CD)gfx_tempotrackheader.c $(OPT)

undo_trackheader.o:  $(BUILD_DEPENDENCIES) $(CD)undo_trackheader.c
	$(CC) $(CD)undo_trackheader.c $(OPT)

mouse_tempoheader.o:  $(BUILD_DEPENDENCIES) $(CD)mouse_tempoheader.c
	$(CC) $(CD)mouse_tempoheader.c $(OPT)

undo_reltempomax.o:  $(BUILD_DEPENDENCIES) $(CD)undo_reltempomax.c
	$(CC) $(CD)undo_reltempomax.c $(OPT)

undo_maintempos.o:  $(BUILD_DEPENDENCIES) $(CD)undo_maintempos.c
	$(CC) $(CD)undo_maintempos.c $(OPT)

undo_playlist.o:  $(BUILD_DEPENDENCIES) $(CD)undo_playlist.c
	$(CC) $(CD)undo_playlist.c $(OPT)

gfx_upperleft.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_upperleft.c
	$(CC) $(CD)gfx_upperleft.c $(OPT)

mouse_quantitize.o:  $(BUILD_DEPENDENCIES) $(CD)mouse_quantitize.c
	$(CC) $(CD)mouse_quantitize.c $(OPT)

gfx_statusbar.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_statusbar.c
	$(CC) $(CD)gfx_statusbar.c $(OPT)

window_config.o:  $(BUILD_DEPENDENCIES) $(CD)window_config.c
	$(CC) $(CD)window_config.c $(OPT)

PEQ_clock.o:  $(BUILD_DEPENDENCIES) $(CD)PEQ_clock.c $(CD)playerclass.h
	$(CC) $(CD)PEQ_clock.c $(OPT)

block_insert.o:  $(BUILD_DEPENDENCIES) $(CD)block_insert.c
	$(CC) $(CD)block_insert.c $(OPT)

block_delete.o:  $(BUILD_DEPENDENCIES) $(CD)block_delete.c
	$(CC) $(CD)block_delete.c $(OPT)

undo_block_insertdelete.o:  $(BUILD_DEPENDENCIES) $(CD)undo_block_insertdelete.c
	$(CC) $(CD)undo_block_insertdelete.c $(OPT)

track_onoff.o:  $(BUILD_DEPENDENCIES) $(CD)track_onoff.c
	$(CC) $(CD)track_onoff.c $(OPT)

backwards.o:  $(BUILD_DEPENDENCIES) $(CD)new/backwards.c
	$(CC) $(CD)new/backwards.c $(OPT)

invert.o:  $(BUILD_DEPENDENCIES) $(CD)new/invert.c
	$(CC) $(CD)new/invert.c $(OPT)

gfx_slider.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_slider.c
	$(CC) $(CD)gfx_slider.c $(OPT)

gfx_wblocks_reltempo.o:  $(BUILD_DEPENDENCIES) $(CD)gfx_wblocks_reltempo.c
	$(CC) $(CD)gfx_wblocks_reltempo.c $(OPT)

undo_reltemposlider.o:  $(BUILD_DEPENDENCIES) $(CD)undo_reltemposlider.c
	$(CC) $(CD)undo_reltemposlider.c $(OPT)

mouse_reltemposlider.o:  $(BUILD_DEPENDENCIES) $(CD)mouse_reltemposlider.c
	$(CC) $(CD)mouse_reltemposlider.c $(OPT)

X11_Main.o:  $(BUILD_DEPENDENCIES) $(P)X11_Main.c 
	$(CC) $(P)X11_Main.c $(OPT)

X11_visual.o:  $(BUILD_DEPENDENCIES) $(P)X11_visual.c 
	$(CC) $(P)X11_visual.c $(OPT) 

X11_error.o:  $(BUILD_DEPENDENCIES) X11/X11_error.c 
	$(CC) X11/X11_error.c $(OPT)

W_Error.o:  $(BUILD_DEPENDENCIES) windows/W_Error.c 
	$(CC) windows/W_Error.c $(OPT)

X11_Ptask2Mtask.o:  $(BUILD_DEPENDENCIES) X11/X11_Ptask2Mtask.c 
	$(CC) X11/X11_Ptask2Mtask.c $(OPT)

X11_Bs_edit.o:  $(BUILD_DEPENDENCIES) X11/X11_Bs_edit.c 
	$(CC) X11/X11_Bs_edit.c $(OPT)

X11_endprogram.o:  $(BUILD_DEPENDENCIES) $(P)X11_endprogram.c 
	$(CC) $(P)X11_endprogram.c $(OPT)

X11_disk.o:  $(BUILD_DEPENDENCIES) X11/X11_disk.c 
	$(CC) X11/X11_disk.c $(OPT)

posix_Player.o:  $(BUILD_DEPENDENCIES) posix/posix_Player.c 
	$(CC) posix/posix_Player.c $(OPT)

X11_ReqType.o:  $(BUILD_DEPENDENCIES) X11/X11_ReqType.c 
	$(CC) X11/X11_ReqType.c $(OPT)

X11_Qtstuff.o:  $(BUILD_DEPENDENCIES) X11/X11_Qtstuff.c 
	$(CC) X11/X11_Qtstuff.c $(OPT)

X11_instrument.o:  $(BUILD_DEPENDENCIES) X11/X11_instrument.c
	$(CC) X11/X11_instrument.c $(OPT)

X11_keyboard.o:  $(BUILD_DEPENDENCIES) X11/X11_keyboard.c
	$(CC) X11/X11_keyboard.c $(OPT)

#X11_MidiProperties.o:  $(BUILD_DEPENDENCIES) X11/X11_MidiProperties.c
#	$(CC) X11/X11_MidiProperties.c $(OPT) 

#X11_ClientMessages.o:  $(BUILD_DEPENDENCIES) X11/X11_ClientMessages.c
#	$(CC) X11/X11_ClientMessages.c $(OPT)

$(P)EditorWidget.h: $(BUILD_DEPENDENCIES)

Qt_Main.o:  $(BUILD_DEPENDENCIES) $(P)Qt_Main.cpp $(P)EditorWidget.h $(P)Qt_instruments_proc.h
	$(CCC) $(P)Qt_Main.cpp $(QTOPT) -Wno-error 

Qt_visual.o:  $(BUILD_DEPENDENCIES) $(P)Qt_visual.cpp $(P)EditorWidget.h $(CD)visual_op_queue_proc.h
	$(CCC) $(P)Qt_visual.cpp $(QTOPT)

GTK_visual.o:  $(BUILD_DEPENDENCIES) GTK/GTK_visual.c  $(CD)visual_op_queue_proc.h
	$(CC) GTK/GTK_visual.c $(OPT) $(GTK_CFLAGS)

GTK_ReqType.o:  $(BUILD_DEPENDENCIES) GTK/GTK_ReqType.c 
	$(CC) GTK/GTK_ReqType.c $(OPT) $(GTK_CFLAGS)

Qt_error.o:  $(BUILD_DEPENDENCIES) $(P)Qt_error.c $(P)EditorWidget.h
	$(CC) $(P)Qt_error.c $(OPT)

Qt_Ptask2Mtask.o:  $(BUILD_DEPENDENCIES) $(P)Qt_Ptask2Mtask.cpp $(P)EditorWidget.h
	$(CC) $(P)Qt_Ptask2Mtask.cpp $(OPT)

Qt_endprogram.o:  $(BUILD_DEPENDENCIES) $(P)Qt_endprogram.c $(P)EditorWidget.h
	$(CC) $(P)Qt_endprogram.c $(OPT)

Qt_disk.o:  $(BUILD_DEPENDENCIES) $(P)Qt_disk.c $(P)EditorWidget.h
	$(CC) $(P)Qt_disk.c $(OPT)

Qt_Player.o:  $(BUILD_DEPENDENCIES) $(P)Qt_Player.c $(P)EditorWidget.h
	$(CC) $(P)Qt_Player.c $(OPT)

Qt_EventReceiver.o:  $(BUILD_DEPENDENCIES) $(P)Qt_EventReceiver.cpp $(P)EditorWidget.h
	$(CCC) $(P)Qt_EventReceiver.cpp $(QTOPT)

Qt_colors.o:  $(BUILD_DEPENDENCIES) $(P)Qt_colors.cpp $(P)mQt_colors.cpp
	$(CCC) $(P)Qt_colors.cpp $(QTOPT)

$(P)mQt_colors.cpp: $(P)Qt_colors.cpp $(BUILD_DEPENDENCIES)
	$(MOC) $(P)Qt_colors.cpp >$(P)mQt_colors.cpp

Qt_Menues.o:  $(BUILD_DEPENDENCIES) $(P)Qt_Menues.cpp $(P)mQt_Menues.cpp
	$(CCC) $(P)Qt_Menues.cpp $(QTOPT)

$(P)mQt_Menues.cpp: $(P)Qt_Menues.cpp $(BUILD_DEPENDENCIES)
	$(MOC) $(P)Qt_Menues.cpp >$(P)mQt_Menues.cpp

Qt_Fonts.o:  $(BUILD_DEPENDENCIES) $(P)Qt_Fonts.cpp
	$(CCC) $(P)Qt_Fonts.cpp $(QTOPT)

Qt_MainWindow.o:  $(BUILD_DEPENDENCIES) $(P)Qt_MainWindow.cpp
	$(CCC) $(P)Qt_MainWindow.cpp $(QTOPT)

#QD = /home/kjetil/site/src/qt-x11-free-3.3.8b/src/dialogs/
QD = $(P)

# Compile our own (modified) version of the qcolordialog in order to show real time update of colors.
# (it was surprisingly simple to do this. I just had to copy the file. No editing or use of custom compiler flags was needed.)
qcolordialog.o:  $(BUILD_DEPENDENCIES) $(QD)qcolordialog.cpp
	$(MOC) $(QD)qcolordialog.h >$(QD)qcolordialog.moc
	$(MOC) $(QD)qcolordialog.cpp >>$(QD)qcolordialog.moc
	$(CCC) $(QD)qcolordialog.cpp $(QTOPT) -Wno-error

Qt_Bs_edit.o: $(BUILD_DEPENDENCIES) $(P)Qt_Bs_edit.cpp $(P)mQt_Bs_edit.cpp
	$(CCC) $(P)Qt_Bs_edit.cpp $(QTOPT)

$(P)mQt_Bs_edit.cpp: $(P)Qt_Bs_edit.cpp $(BUILD_DEPENDENCIES)
	$(MOC) $(P)Qt_Bs_edit.cpp >$(P)mQt_Bs_edit.cpp

Qt_instruments.o: $(BUILD_DEPENDENCIES) $(P)Qt_instruments.cpp $(P)Qt_instruments_widget.h  $(P)Qt_instrument_widget.h $(P)Qt_no_instrument_widget.h $(P)Qt_control_change_widget.h $(P)instrument_widget.ui.h $(P)control_change_widget.ui.h $(P)instruments_widget.ui.h
	$(CCC) $(P)Qt_instruments.cpp $(QTOPT)

$(P)Qt_instruments_widget.h: $(BUILD_DEPENDENCIES) $(P)qt4_instruments_widget.ui $(P)create_source_from_ui.sh $(P)Qt_instruments_widget_callbacks.h
	cd $(P) && ./create_source_from_ui.sh $(UIC) $(MOC) instruments_widget

$(P)Qt_instrument_widget.h: $(BUILD_DEPENDENCIES) $(P)qt4_instrument_widget.ui $(P)create_source_from_ui.sh $(P)Qt_instrument_widget_callbacks.h
	cd $(P) && ./create_source_from_ui.sh $(UIC) $(MOC) instrument_widget

$(P)Qt_no_instrument_widget.h: $(BUILD_DEPENDENCIES) $(P)qt4_no_instrument_widget.ui $(P)create_source_from_ui.sh $(P)Qt_no_instrument_widget_callbacks.h
	cd $(P) && ./create_source_from_ui.sh $(UIC) $(MOC) no_instrument_widget

$(P)Qt_control_change_widget.h: $(BUILD_DEPENDENCIES) $(P)qt4_control_change_widget.ui $(P)create_source_from_ui.sh $(P)Qt_control_change_widget_callbacks.h
	cd $(P) && ./create_source_from_ui.sh $(UIC) $(MOC) control_change_widget

Qt_memory.o:  $(BUILD_DEPENDENCIES)  $(P)Qt_memory.cpp
	$(CCC)  $(P)Qt_memory.cpp $(CPPOPT)

posix_settings.o:  $(BUILD_DEPENDENCIES) posix/posix_settings.c
	$(CC) posix/posix_settings.c $(OPT)

settings.o:  $(BUILD_DEPENDENCIES) $(CD)settings.c
	$(CC) $(CD)settings.c $(OPT)

scroll.o:  $(BUILD_DEPENDENCIES) $(CD)scroll.c
	$(CC) $(CD)scroll.c $(OPT)


pixmap.o:  $(BUILD_DEPENDENCIES)  $(CD)pixmap.c
	$(CC)  $(CD)pixmap.c $(OPT)

blts.o:  $(BUILD_DEPENDENCIES)  $(CD)blts.c
	$(CC)  $(CD)blts.c $(OPT)

X11_memory.o:  $(BUILD_DEPENDENCIES)  $(P)X11_memory.c 
	$(CC)  $(P)X11_memory.c $(OPT)

gfx_shrink.o:  $(BUILD_DEPENDENCIES)  $(CD)gfx_shrink.c
	$(CC)  $(CD)gfx_shrink.c $(OPT)

gfx_shrink_t.o:  $(BUILD_DEPENDENCIES)  $(CD)gfx_shrink_t.c
	$(CC)  $(CD)gfx_shrink_t.c $(OPT)

scroll_play.o:  $(BUILD_DEPENDENCIES)  $(CD)scroll_play.c
	$(CC)  $(CD)scroll_play.c $(OPT)

gfx_tempocolor.o:  $(BUILD_DEPENDENCIES)  $(CD)gfx_tempocolor.c
	$(CC)  $(CD)gfx_tempocolor.c $(OPT)

block_split.o:  $(BUILD_DEPENDENCIES)  $(CD)block_split.c
	$(CC)  $(CD)block_split.c $(OPT)

undo_block_mergesplit.o:  $(BUILD_DEPENDENCIES)  $(CD)undo_block_mergesplit.c
	$(CC)  $(CD)undo_block_mergesplit.c $(OPT)

glissando.o:  $(BUILD_DEPENDENCIES)  $(CD)new/glissando.c
	$(CC)  $(CD)new/glissando.c $(OPT)

pitchexpand.o:  $(BUILD_DEPENDENCIES)  $(CD)new/pitchexpand.c
	$(CC)  $(CD)new/pitchexpand.c $(OPT)

api_common.o:  $(BUILD_DEPENDENCIES)  $(API)api_common.c
	$(CC)  $(API)api_common.c $(OPT)

api_keyplay.o:  $(BUILD_DEPENDENCIES)  $(API)api_keyplay.c $(API)radium_proc.h
	$(CC)  $(API)api_keyplay.c $(OPT)

api_keyplayedit.o:  $(BUILD_DEPENDENCIES)  $(API)api_keyplayedit.c $(API)radium_proc.h
	$(CC)  $(API)api_keyplayedit.c $(OPT)

api_navigate.o:  $(BUILD_DEPENDENCIES)  $(API)api_navigate.c $(API)radium_proc.h
	$(CC)  $(API)api_navigate.c $(OPT)

api_noteedit.o:  $(BUILD_DEPENDENCIES)  $(API)api_noteedit.c $(API)radium_proc.h
	$(CC)  $(API)api_noteedit.c $(OPT)

api_trackonoff.o:  $(BUILD_DEPENDENCIES)  $(API)api_trackonoff.c $(API)radium_proc.h
	$(CC)  $(API)api_trackonoff.c $(OPT)

api_zoom.o:  $(BUILD_DEPENDENCIES)  $(API)api_zoom.c $(API)radium_proc.h
	$(CC)  $(API)api_zoom.c $(OPT)

api_notemanipulate.o:  $(BUILD_DEPENDENCIES)  $(API)api_notemanipulate.c $(API)radium_proc.h
	$(CC)  $(API)api_notemanipulate.c $(OPT)

api_play.o:  $(BUILD_DEPENDENCIES)  $(API)api_play.c $(API)radium_proc.h
	$(CC)  $(API)api_play.c $(OPT)

api_clipboard.o:  $(BUILD_DEPENDENCIES)  $(API)api_clipboard.c $(API)radium_proc.h
	$(CC)  $(API)api_clipboard.c $(OPT)

api_undo.o:  $(BUILD_DEPENDENCIES)  $(API)api_undo.c $(API)radium_proc.h
	$(CC)  $(API)api_undo.c $(OPT)

api_various.o:  $(BUILD_DEPENDENCIES)  $(API)api_various.c $(API)radium_proc.h
	$(CC)  $(API)api_various.c $(OPT)

api_instruments.o:  $(BUILD_DEPENDENCIES)  $(API)api_instruments.c $(API)radium_proc.h
	$(CC)  $(API)api_instruments.c $(OPT)

api_requesters.o:  $(BUILD_DEPENDENCIES)  $(API)api_requesters.c $(API)radium_proc.h
	$(CC)  $(API)api_requesters.c $(OPT)

radium_wrap.o:  $(BUILD_DEPENDENCIES)  $(API)radium_wrap.c $(API)radium_proc.h
	$(CC)  $(API)radium_wrap.c $(OPT) -w


$(API)radium_wrap.c: $(BUILD_DEPENDENCIES) $(API)protos.conf $(API)protoconfparser.py $(API)/radium_wrap/radium_wrap_1.c $(API)/radium_wrap/radium_wrap_3.c $(API)makeradiumwrap_c.sh $(API)makeradiumwrap_c.sh
	cd $(API) ; sh makeradiumwrap_c.sh $(PYTHONEXE) ; cd ..

# # The following two lines can be uses instead of the two previous.
# # But I haven't found out how to make swig generate the "PyArg_ParseTupleAndKeywords"
# # function (if possible), and I haven't bothered porting swig to amigaos.
# # And protoconfparser.py does a perfectly fine job anyway.
#$(API)radium_wrap.c: $(API)radium.i
#	swig -python $(API)radium.i

api_support.o:  $(BUILD_DEPENDENCIES)  $(API)api_support.c
	$(CC)  $(API)api_support.c $(OPT)

ad_noteadd.o:  $(BUILD_DEPENDENCIES)  advanced/ad_noteadd.c
	$(CC)  advanced/ad_noteadd.c $(OPT)

wrapfunclist.o:  $(BUILD_DEPENDENCIES) $(API)wrapfunclist.c
	$(CC) $(API)wrapfunclist.c $(OPT)

$(API)wrapfunclist.c: $(BUILD_DEPENDENCIES) $(API)protos.conf $(API)protoconfparser.py
	@echo "$(PYTHONEXE) protoconfparser.py wrapfunclist.c"
	cd $(API) ; $(PYTHONEXE) protoconfparser.py wrapfunclist.c ; cd ..

$(API)radium.i: $(BUILD_DEPENDENCIES) $(API)protos.conf $(API)protoconfparser.py
	@echo "$(PYTHONEXE) protoconfparser.py radium.i"
	cd $(API) ; $(PYTHONEXE) protoconfparser.py radium.i ; cd ..

$(API)radium_proc.h: $(API)protos.conf $(API)protoconfparser.py
	@echo "$(PYTHONEXE) protoconfparser.py radium_proc.h"
	cd $(API) ; $(PYTHONEXE) protoconfparser.py radium_proc.h ; cd ..

gfx_request.o:  $(BUILD_DEPENDENCIES)  $(CD)gfx_request.c
	$(CC)  $(CD)gfx_request.c $(OPT)





midi_playfromstart.o:  $(BUILD_DEPENDENCIES)  midi/midi_playfromstart.c
	$(CC)  midi/midi_playfromstart.c $(OPT) 
midi_i_plugin.o:  $(BUILD_DEPENDENCIES)  midi/midi_i_plugin.c
	$(CC)  midi/midi_i_plugin.c $(OPT) 
midi_i_input.o:  $(BUILD_DEPENDENCIES)  midi/midi_i_input.c
	$(CC)  midi/midi_i_input.c $(OPT) 
midi_fx.o:  $(BUILD_DEPENDENCIES)  midi/midi_fx.c
	$(CC)  midi/midi_fx.c $(OPT) 

#disk_midi_mymidilinks.o:  $(BUILD_DEPENDENCIES)  midi/disk_midi_mymidilinks.c
#	$(CC)  midi/disk_midi_mymidilinks.c $(OPT) 
# TODO

disk_midi_i_plugin.o:  $(BUILD_DEPENDENCIES)  midi/disk_midi_i_plugin.c
	$(CC)  midi/disk_midi_i_plugin.c $(OPT) 
disk_midi_fx.o:  $(BUILD_DEPENDENCIES)  midi/disk_midi_fx.c
	$(CC)  midi/disk_midi_fx.c $(OPT) 
midi_rtmidi.o:  $(BUILD_DEPENDENCIES) midi/rtmidi/midi_rtmidi.cpp $(RTMIDI_DIR)/RtMidi.h
	$(CCC) midi/rtmidi/midi_rtmidi.cpp $(CPPOPT) $(RTMIDI_CFLAGS)
alsaseq_midi.o:  $(BUILD_DEPENDENCIES)  midi/alsaseq/alsaseq_midi.c
	$(CC)  midi/alsaseq/alsaseq_midi.c $(OPT) 
#midi_getEvents.o:  $(BUILD_DEPENDENCIES)  midi/midi_getEvents.c
#	$(CC)  midi/midi_getEvents.c $(OPT) 
midi_menues.o:  $(BUILD_DEPENDENCIES)  midi/midi_menues.c
	$(CC)  midi/midi_menues.c $(OPT) 

RtMidi.o:  $(BUILD_DEPENDENCIES) $(RTMIDI_DIR)/RtMidi.cpp $(RTMIDI_DIR)/RtMidi.h
	$(CCC) $(RTMIDI_DIR)/RtMidi.cpp $(RTMIDI_CFLAGS) $(CPPOPT)



buildtype.opt: Makefile
	if [ $(BUILDTYPE) = DEBUG ] ; then echo "$(DEBUG_BUILD_OPTS)" >buildtype.opt ; else echo "$(RELEASE_BUILD_OPTS)" >buildtype.opt ; fi

bin/X11_XSendEvent: X11/X11_XSendEvent.c
	$(CC) X11/X11_XSendEvent.c -Wall -o bin/X11_XSendEvent -L/usr/X11R6/lib -lX11
